k = 1, start from log number 29
15:23:13,239 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:23:13,243 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

15:23:13,243 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:23:13,243 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
15:23:13,244 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
15:23:13,245 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
15:23:13,245 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
15:23:13,245 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
15:23:13,245 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
15:23:13,245 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
15:23:13,245 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
15:23:13,246 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
15:23:13,246 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
15:23:13,246 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
15:23:13,246 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
15:23:13,246 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
15:23:13,246 (ScriptRunner.java:135) DEBUG - );
15:23:13,247 (ScriptRunner.java:135) DEBUG - 
15:23:13,247 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
15:23:13,247 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
15:23:13,247 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:23:13,247 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
15:23:13,248 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
15:23:13,248 (ScriptRunner.java:135) DEBUG - );
15:23:13,250 (ScriptRunner.java:135) DEBUG - 
15:23:13,250 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:23:13,250 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:23:13,250 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
15:23:13,250 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
15:23:13,250 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
15:23:13,251 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
15:23:13,251 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:23:13,252 (ScriptRunner.java:135) DEBUG - );
15:23:13,253 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
15:23:13,254 (ScriptRunner.java:135) DEBUG - 
15:23:13,254 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:23:13,254 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:23:13,254 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
15:23:13,254 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
15:23:13,254 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
15:23:13,255 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
15:23:13,255 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
15:23:13,255 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
15:23:13,255 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
15:23:13,255 (ScriptRunner.java:135) DEBUG - );
15:23:13,256 (ScriptRunner.java:135) DEBUG - 
15:23:13,256 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
15:23:13,256 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
15:23:13,256 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
15:23:13,256 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
15:23:13,256 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
15:23:13,256 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
15:23:13,256 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
15:23:13,256 (ScriptRunner.java:135) DEBUG - );
15:23:13,257 (ScriptRunner.java:135) DEBUG - 
15:23:13,257 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:23:13,257 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:23:13,257 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
15:23:13,257 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
15:23:13,257 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
15:23:13,258 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
15:23:13,258 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
15:23:13,258 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:23:13,258 (ScriptRunner.java:135) DEBUG - );
15:23:13,259 (ScriptRunner.java:135) DEBUG - 
15:23:13,259 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
15:23:13,259 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
15:23:13,259 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
15:23:13,259 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
15:23:13,259 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
15:23:13,259 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
15:23:13,259 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
15:23:13,259 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
15:23:13,259 (ScriptRunner.java:135) DEBUG - );
15:23:13,260 (ScriptRunner.java:135) DEBUG - 
15:23:13,260 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
15:23:13,260 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
15:23:13,260 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
15:23:13,261 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
15:23:13,261 (ScriptRunner.java:135) DEBUG - );
15:23:13,263 (ScriptRunner.java:135) DEBUG - 
15:23:13,263 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
15:23:13,263 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
15:23:13,263 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
15:23:13,264 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
15:23:13,264 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
15:23:13,264 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
15:23:13,264 (ScriptRunner.java:135) DEBUG - );
15:23:13,275 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,275 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
15:23:13,276 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
15:23:13,288 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
15:23:13,289 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
15:23:13,289 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
15:23:13,289 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
15:23:13,289 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
15:23:13,289 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
15:23:13,289 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
15:23:13,290 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
15:23:13,291 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
15:23:13,291 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
15:23:13,292 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
15:23:13,292 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
15:23:13,292 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
15:23:13,292 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
15:23:13,293 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
15:23:13,294 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
15:23:13,295 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
15:23:13,295 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:23:13,295 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:23:13,296 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,296 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
15:23:13,296 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
15:23:13,296 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
15:23:13,296 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
15:23:13,296 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
15:23:13,296 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
15:23:13,296 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
15:23:13,297 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
15:23:13,297 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
15:23:13,297 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
15:23:13,297 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
15:23:13,297 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
15:23:13,297 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
15:23:13,297 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
15:23:13,298 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
15:23:13,298 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
15:23:13,298 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
15:23:13,298 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
15:23:13,298 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
15:23:13,298 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
15:23:13,298 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
15:23:13,299 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
15:23:13,299 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,299 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
15:23:13,299 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
15:23:13,299 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
15:23:13,300 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
15:23:13,300 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
15:23:13,301 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
15:23:13,301 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
15:23:13,301 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
15:23:13,301 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
15:23:13,301 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
15:23:13,301 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
15:23:13,301 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
15:23:13,302 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:13,302 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:13,302 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:13,302 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:23:13,302 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:23:13,302 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,302 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
15:23:13,302 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
15:23:13,303 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
15:23:13,303 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
15:23:13,303 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
15:23:13,303 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
15:23:13,303 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
15:23:13,303 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
15:23:13,303 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
15:23:13,303 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
15:23:13,304 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
15:23:13,304 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
15:23:13,304 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,304 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
15:23:13,304 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
15:23:13,306 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
15:23:13,306 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
15:23:13,306 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
15:23:13,306 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
15:23:13,307 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
15:23:13,307 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
15:23:13,307 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
15:23:13,307 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
15:23:13,307 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
15:23:13,307 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
15:23:13,307 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
15:23:13,307 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
15:23:13,308 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
15:23:13,308 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
15:23:13,308 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
15:23:13,308 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:13,308 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:13,308 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:13,308 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,308 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
15:23:13,308 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
15:23:13,309 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
15:23:13,309 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
15:23:13,310 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
15:23:13,310 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
15:23:13,310 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
15:23:13,310 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
15:23:13,310 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
15:23:13,310 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
15:23:13,310 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
15:23:13,311 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
15:23:13,311 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:13,312 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:13,312 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:13,312 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,312 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
15:23:13,312 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
15:23:13,313 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
15:23:13,314 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
15:23:13,314 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
15:23:13,314 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
15:23:13,314 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
15:23:13,314 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
15:23:13,314 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
15:23:13,315 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
15:23:13,315 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
15:23:13,316 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:13,316 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:13,316 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:13,316 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:23:13,316 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:23:13,316 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,316 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
15:23:13,316 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
15:23:13,317 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
15:23:13,318 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
15:23:13,318 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
15:23:13,318 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
15:23:13,318 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
15:23:13,318 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
15:23:13,318 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
15:23:13,318 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
15:23:13,318 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
15:23:13,318 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
15:23:13,319 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
15:23:13,319 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
15:23:13,319 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
15:23:13,319 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
15:23:13,319 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
15:23:13,319 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
15:23:13,319 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
15:23:13,319 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:13,319 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
15:23:13,320 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
15:23:13,320 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
15:23:13,321 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
15:23:13,321 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
15:23:13,321 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
15:23:13,321 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
15:23:13,321 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
15:23:13,323 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

15:23:13,323 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
15:23:13,323 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
15:23:13,323 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
15:23:13,323 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
15:23:13,323 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
15:23:13,323 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
15:23:13,324 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
15:23:13,324 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
15:23:13,324 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
15:23:13,324 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
15:23:13,324 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
15:23:13,324 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
15:23:13,324 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
15:23:13,324 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
15:23:13,324 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
15:23:13,324 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
15:23:13,324 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
15:23:13,324 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
15:23:13,324 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
15:23:13,325 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
15:23:13,325 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
15:23:13,325 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
15:23:13,325 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
15:23:13,328 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

15:23:13,328 (DBWorkload.java:260) INFO  - ======================================================================
15:23:13,333 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
15:23:13,333 (DBWorkload.java:305) DEBUG - Num groupings: 0
15:23:13,336 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
15:23:13,336 (DBWorkload.java:519) INFO  - ======================================================================
15:23:13,336 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
15:23:13,336 (DBWorkload.java:532) INFO  - ======================================================================
15:23:13,336 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
15:23:13,336 (DBWorkload.java:839) DEBUG - CommandLine load => true
15:23:13,336 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
15:23:13,336 (DBWorkload.java:798) DEBUG - Loading TPCC Database
15:23:13,767 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
15:23:13,769 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
15:23:14,060 (TPCCLoader.java:222) ERROR - Failed to load data for TPC-C
java.sql.BatchUpdateException: 批次处理 0 INSERT INTO ITEM VALUES (1, 'sxvnjhpdqdxvcrastvy', 96.11, 'cwvmgnykrxvzxkgxtspsjdgyluegqflaqlocfljbepowfn', 6241) 被中止，呼叫 getNextException 以取得原因。
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:134)
	at org.postgresql.core.v3.QueryExecutorImpl$ErrorTrackingResultHandler.handleError(QueryExecutorImpl.java:325)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2024)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1204)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1229)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:1026)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1661)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.loadItems(TPCCLoader.java:209)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader$1.load(TPCCLoader.java:89)
	at com.oltpbenchmark.api.Loader$LoaderThread.run(Loader.java:75)
	at com.oltpbenchmark.util.ThreadUtil$LatchRunnable.run(ThreadUtil.java:343)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
15:23:14,060 (TPCCLoader.java:223) ERROR - BatchUpdateException Cause => ERROR: duplicate key value violates unique constraint "item_pkey"
  详细：Key (i_id)=(1) already exists.
15:23:14,060 (TPCCLoader.java:235) DEBUG - Rolling back changes from last batch
15:23:14,064 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
15:23:14,298 (TPCCLoader.java:276) DEBUG - ERROR: duplicate key value violates unique constraint "warehouse_pkey"
  详细：Key (w_id)=(1) already exists.
15:23:14,340 (TPCCLoader.java:365) DEBUG - 批次处理 0 INSERT INTO STOCK VALUES (1, 1, 59, 0.0, 0, 0, 'mevxctspspdhzdmuzglignonmc', 'pudomnhurewbbzlqntglifh', 'nqjrfkvxzlhpaxzagsskbgz', 'kpkcxekmbmldsjopfssymtn', 'pvkvjdnxlfrquywlnmkevaq', 'coejubdrnbkyoprssdaokmx', 'ozyckjyavsqiobhbavojuyh', 'uppzlhjpggodvuvbuuhokup', 'mirslwxlcgeadrcgqplivxa', 'ptaumghqeezuegdfmvmvvwn', 'dwknglvgzyboahnbvzphaet') 被中止，呼叫 getNextException 以取得原因。
15:23:14,353 (TPCCLoader.java:420) DEBUG - ERROR: duplicate key value violates unique constraint "district_pkey"
  详细：Key (d_w_id, d_id)=(1, 1) already exists.
15:23:14,404 (TPCCLoader.java:546) DEBUG - 批次处理 0 INSERT INTO CUSTOMER VALUES (1, 1, 1, 0.46299999952316284, 'GC', 'BARBARBAR', 'axzmxlir', 50000.0, -10.0, 10.0, 1, 0, 'xuoiubaoxecqbxssdou', 'viwnxhdiant', 'mxngxcqcwbsmp', 'CS', '618511111', '8557440571666530', '2022-02-18 15:23:14.357000+08', 'OE', 'auxklvscjktmczeiqddgdlftmzwkbtclechfjgixtnrxzfoipeexgtcyugveosgyauqctjuzzsmrnlavldocvbvqpktxeifhngaqsmtrdthaivtlslagaflbbaisjxsvbvoxaqbvfosrdzsowoppzbgjhmsadiqkazkeaobccoyurpdyuyhsmyhctejavurndsgukwsycwzpqrdlkgzlftmxvuruxolennkzazbybhqtsowcoyeoaymmewotgdvaaouqosbxntfibellpmsdzwgfbjcmjvugqfubaajpmohjrrytatpcaaloembvifxkqteuoieoswycqiajpatuaxhhjdxvsgzewuotlqbjwkynlctaaiorhinntctzdusqqugkaoveyhrnzdmfkiqgotgwst') 被中止，呼叫 getNextException 以取得原因。
15:23:14,433 (TPCCLoader.java:703) DEBUG - 批次处理 0 INSERT INTO OORDER VALUES (1, 1, 1, 2498, 6, 8, 1, '2022-02-18 15:23:14.408000+08') 被中止，呼叫 getNextException 以取得原因。
15:23:14,437 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=0.67s]
15:23:14,437 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
15:23:14,437 (DBWorkload.java:540) INFO  - Finished!
15:23:14,437 (DBWorkload.java:541) INFO  - ======================================================================
15:23:14,437 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
15:23:14,437 (DBWorkload.java:839) DEBUG - CommandLine execute => false
15:23:14,437 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 1, start from log number 29
15:23:19,698 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:23:19,702 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

15:23:19,702 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:23:19,703 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
15:23:19,703 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
15:23:19,704 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
15:23:19,704 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
15:23:19,704 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
15:23:19,705 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
15:23:19,706 (ScriptRunner.java:135) DEBUG - );
15:23:19,707 (ScriptRunner.java:135) DEBUG - 
15:23:19,707 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
15:23:19,707 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
15:23:19,707 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:23:19,707 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
15:23:19,707 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
15:23:19,707 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
15:23:19,707 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
15:23:19,707 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
15:23:19,708 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
15:23:19,708 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
15:23:19,708 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
15:23:19,708 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
15:23:19,708 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
15:23:19,708 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
15:23:19,708 (ScriptRunner.java:135) DEBUG - );
15:23:19,709 (ScriptRunner.java:135) DEBUG - 
15:23:19,709 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:23:19,710 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:23:19,710 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
15:23:19,710 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
15:23:19,710 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
15:23:19,711 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
15:23:19,712 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
15:23:19,712 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:23:19,712 (ScriptRunner.java:135) DEBUG - );
15:23:19,714 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
15:23:19,714 (ScriptRunner.java:135) DEBUG - 
15:23:19,714 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:23:19,714 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:23:19,714 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
15:23:19,714 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
15:23:19,714 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
15:23:19,714 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
15:23:19,714 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
15:23:19,714 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
15:23:19,714 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
15:23:19,715 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
15:23:19,715 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
15:23:19,715 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
15:23:19,715 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
15:23:19,715 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
15:23:19,715 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
15:23:19,715 (ScriptRunner.java:135) DEBUG - );
15:23:19,716 (ScriptRunner.java:135) DEBUG - 
15:23:19,716 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
15:23:19,716 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
15:23:19,716 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
15:23:19,716 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
15:23:19,716 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
15:23:19,716 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
15:23:19,716 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
15:23:19,716 (ScriptRunner.java:135) DEBUG - );
15:23:19,717 (ScriptRunner.java:135) DEBUG - 
15:23:19,717 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:23:19,717 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:23:19,717 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
15:23:19,717 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
15:23:19,717 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
15:23:19,717 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
15:23:19,717 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
15:23:19,717 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
15:23:19,718 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
15:23:19,718 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
15:23:19,718 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
15:23:19,718 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
15:23:19,718 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
15:23:19,718 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:23:19,718 (ScriptRunner.java:135) DEBUG - );
15:23:19,719 (ScriptRunner.java:135) DEBUG - 
15:23:19,719 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
15:23:19,719 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
15:23:19,719 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
15:23:19,719 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
15:23:19,719 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
15:23:19,719 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
15:23:19,719 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
15:23:19,719 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
15:23:19,719 (ScriptRunner.java:135) DEBUG - );
15:23:19,720 (ScriptRunner.java:135) DEBUG - 
15:23:19,720 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
15:23:19,720 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
15:23:19,720 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:23:19,720 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
15:23:19,720 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
15:23:19,720 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
15:23:19,720 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
15:23:19,721 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
15:23:19,721 (ScriptRunner.java:135) DEBUG - );
15:23:19,723 (ScriptRunner.java:135) DEBUG - 
15:23:19,723 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
15:23:19,723 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
15:23:19,723 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
15:23:19,724 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
15:23:19,724 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
15:23:19,724 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
15:23:19,724 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
15:23:19,724 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
15:23:19,724 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
15:23:19,724 (ScriptRunner.java:135) DEBUG - );
15:23:19,736 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,736 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
15:23:19,736 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
15:23:19,749 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
15:23:19,749 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
15:23:19,749 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
15:23:19,750 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
15:23:19,750 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
15:23:19,750 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
15:23:19,750 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
15:23:19,750 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
15:23:19,750 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
15:23:19,751 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
15:23:19,752 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
15:23:19,752 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
15:23:19,752 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
15:23:19,752 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
15:23:19,752 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
15:23:19,752 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
15:23:19,753 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
15:23:19,753 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
15:23:19,753 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
15:23:19,753 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
15:23:19,754 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
15:23:19,754 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
15:23:19,755 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
15:23:19,756 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
15:23:19,756 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:23:19,757 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:23:19,757 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,757 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
15:23:19,757 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
15:23:19,757 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
15:23:19,758 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
15:23:19,759 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
15:23:19,759 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
15:23:19,759 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
15:23:19,759 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
15:23:19,759 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
15:23:19,759 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
15:23:19,760 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
15:23:19,760 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
15:23:19,760 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
15:23:19,760 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
15:23:19,760 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,760 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
15:23:19,760 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
15:23:19,761 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
15:23:19,761 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
15:23:19,762 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
15:23:19,762 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
15:23:19,762 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
15:23:19,762 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
15:23:19,762 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
15:23:19,762 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
15:23:19,762 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
15:23:19,763 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:19,763 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:19,763 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:19,763 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:23:19,763 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:23:19,763 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,763 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
15:23:19,763 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
15:23:19,764 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
15:23:19,764 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
15:23:19,764 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
15:23:19,764 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
15:23:19,764 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
15:23:19,764 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
15:23:19,764 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
15:23:19,764 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
15:23:19,765 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
15:23:19,765 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
15:23:19,765 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,765 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
15:23:19,765 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
15:23:19,767 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
15:23:19,767 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
15:23:19,767 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
15:23:19,767 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
15:23:19,768 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
15:23:19,768 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
15:23:19,768 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
15:23:19,768 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
15:23:19,768 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
15:23:19,768 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
15:23:19,769 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
15:23:19,769 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
15:23:19,769 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
15:23:19,769 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
15:23:19,769 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
15:23:19,769 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:19,769 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:19,769 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:19,770 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,770 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
15:23:19,770 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
15:23:19,770 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
15:23:19,770 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
15:23:19,770 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
15:23:19,770 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
15:23:19,770 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
15:23:19,770 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
15:23:19,771 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
15:23:19,771 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
15:23:19,771 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
15:23:19,771 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
15:23:19,771 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
15:23:19,771 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
15:23:19,771 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
15:23:19,771 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
15:23:19,772 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
15:23:19,773 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:19,773 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:19,773 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:19,773 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,773 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
15:23:19,773 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
15:23:19,774 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
15:23:19,775 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
15:23:19,775 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
15:23:19,775 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
15:23:19,775 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
15:23:19,775 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
15:23:19,775 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
15:23:19,775 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
15:23:19,775 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
15:23:19,775 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
15:23:19,776 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
15:23:19,776 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
15:23:19,777 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
15:23:19,777 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:19,777 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:19,777 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:19,777 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:23:19,777 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:23:19,777 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,777 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
15:23:19,777 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
15:23:19,778 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
15:23:19,779 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
15:23:19,779 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
15:23:19,780 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
15:23:19,780 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
15:23:19,780 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
15:23:19,780 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
15:23:19,780 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
15:23:19,780 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
15:23:19,780 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
15:23:19,780 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
15:23:19,781 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
15:23:19,781 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
15:23:19,781 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:19,781 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
15:23:19,781 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
15:23:19,781 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
15:23:19,781 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
15:23:19,782 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
15:23:19,782 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
15:23:19,782 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
15:23:19,782 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
15:23:19,783 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
15:23:19,783 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
15:23:19,784 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

15:23:19,785 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
15:23:19,785 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
15:23:19,785 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
15:23:19,785 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
15:23:19,785 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
15:23:19,785 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
15:23:19,785 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
15:23:19,785 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
15:23:19,785 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
15:23:19,785 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
15:23:19,785 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
15:23:19,785 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
15:23:19,786 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
15:23:19,786 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
15:23:19,786 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
15:23:19,786 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
15:23:19,786 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
15:23:19,786 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
15:23:19,786 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
15:23:19,786 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
15:23:19,786 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
15:23:19,786 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
15:23:19,787 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
15:23:19,790 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

15:23:19,790 (DBWorkload.java:260) INFO  - ======================================================================
15:23:19,795 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
15:23:19,795 (DBWorkload.java:305) DEBUG - Num groupings: 0
15:23:19,798 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
15:23:19,798 (DBWorkload.java:519) INFO  - ======================================================================
15:23:19,798 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
15:23:19,798 (DBWorkload.java:532) INFO  - ======================================================================
15:23:19,798 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
15:23:19,798 (DBWorkload.java:839) DEBUG - CommandLine load => true
15:23:19,798 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
15:23:19,798 (DBWorkload.java:798) DEBUG - Loading TPCC Database
15:23:20,223 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
15:23:20,224 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
15:23:20,498 (TPCCLoader.java:222) ERROR - Failed to load data for TPC-C
java.sql.BatchUpdateException: 批次处理 0 INSERT INTO ITEM VALUES (1, 'sxvnjhpdqdxvcrastvyb', 28.71, 'wvmgnykrxvzxkgxtspsjdgyluegqflaqlocfljbepowfns', 5707) 被中止，呼叫 getNextException 以取得原因。
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:134)
	at org.postgresql.core.v3.QueryExecutorImpl$ErrorTrackingResultHandler.handleError(QueryExecutorImpl.java:325)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2024)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1204)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1229)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:1026)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1661)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.loadItems(TPCCLoader.java:209)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader$1.load(TPCCLoader.java:89)
	at com.oltpbenchmark.api.Loader$LoaderThread.run(Loader.java:75)
	at com.oltpbenchmark.util.ThreadUtil$LatchRunnable.run(ThreadUtil.java:343)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
15:23:20,498 (TPCCLoader.java:223) ERROR - BatchUpdateException Cause => ERROR: duplicate key value violates unique constraint "item_pkey"
  详细：Key (i_id)=(1) already exists.
15:23:20,498 (TPCCLoader.java:235) DEBUG - Rolling back changes from last batch
15:23:20,502 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
15:23:20,746 (TPCCLoader.java:276) DEBUG - ERROR: duplicate key value violates unique constraint "warehouse_pkey"
  详细：Key (w_id)=(1) already exists.
15:23:20,794 (TPCCLoader.java:365) DEBUG - 批次处理 0 INSERT INTO STOCK VALUES (1, 1, 69, 0.0, 0, 0, 'kmbmldsjopfssymtnwpvkvjdnxlfrquy', 'lnmkevaqfcoejubdrnbkyop', 'ssdaokmxdozyckjyavsqiob', 'bavojuyhnuppzlhjpggodvu', 'buuhokuprmirslwxlcgeadr', 'gqplivxapptaumghqeezueg', 'fmvmvvwnudwknglvgzyboah', 'bvzphaetieuojcqbmhcqiou', 'bhkbhtbjvllhhvyfjvyjksx', 'tgxsjqevfgvopphvrpcmblh', 'bcvmqhmsodhvdpkdteuvnan') 被中止，呼叫 getNextException 以取得原因。
15:23:20,808 (TPCCLoader.java:420) DEBUG - ERROR: duplicate key value violates unique constraint "district_pkey"
  详细：Key (d_w_id, d_id)=(1, 1) already exists.
15:23:20,860 (TPCCLoader.java:546) DEBUG - 批次处理 0 INSERT INTO CUSTOMER VALUES (1, 1, 1, 0.38119998574256897, 'GC', 'BARBARBAR', 'lxwlllmrtwnwuc', 50000.0, -10.0, 10.0, 1, 0, 'ensghfktcgzpv', 'psnsixqszdskefupw', 'dmhwlximyfpzjysr', 'AB', '251811111', '4650823739762033', '2022-02-18 15:23:20.812000+08', 'OE', 'ppysaubavjkorvrmrcxrbyfcvxckxueoibnyouzdrojgkcnudmqcieiksgayrhqchjolcfgjlrtvshzjvscakytlejgxseswkunniupwuzvphcuxekswhpvclrzpynvnqaztbljpnwazqnndcdmqvrytlzbkcmkuyzwrfsfvuliadgxisafyyipvocubnjndlsajrdkqjozoccjovsvdsqzzvfeoyjlwxpvmvaivtkulukvqgkyfqdfpjfqrrpfotzxplxchiviqzukmaulrgfuwnvevsbhogbcsfwnucenvtpzndhyxemzqvkvrfqyqmkvjnjioawwzzzxdhrwhjvihakpjtuoesgmzllowvkvczfjhhpeotrumjmupcahfxvzsraixzjdyhrriiweonsggtmtzyq') 被中止，呼叫 getNextException 以取得原因。
15:23:20,891 (TPCCLoader.java:703) DEBUG - 批次处理 0 INSERT INTO OORDER VALUES (1, 1, 1, 158, 10, 7, 1, '2022-02-18 15:23:20.864000+08') 被中止，呼叫 getNextException 以取得原因。
15:23:20,895 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=0.67s]
15:23:20,895 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
15:23:20,896 (DBWorkload.java:540) INFO  - Finished!
15:23:20,896 (DBWorkload.java:541) INFO  - ======================================================================
15:23:20,896 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
15:23:20,896 (DBWorkload.java:839) DEBUG - CommandLine execute => false
15:23:20,896 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 1, start from log number 31
15:23:52,697 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:23:52,700 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

15:23:52,700 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:23:52,701 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
15:23:52,701 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
15:23:52,702 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
15:23:52,702 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
15:23:52,703 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
15:23:52,704 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
15:23:52,704 (ScriptRunner.java:135) DEBUG - );
15:23:52,705 (ScriptRunner.java:135) DEBUG - 
15:23:52,705 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
15:23:52,705 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
15:23:52,705 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:23:52,705 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
15:23:52,705 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
15:23:52,705 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
15:23:52,705 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
15:23:52,706 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
15:23:52,706 (ScriptRunner.java:135) DEBUG - );
15:23:52,707 (ScriptRunner.java:135) DEBUG - 
15:23:52,707 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:23:52,707 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:23:52,707 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
15:23:52,708 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
15:23:52,708 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
15:23:52,709 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
15:23:52,709 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:23:52,709 (ScriptRunner.java:135) DEBUG - );
15:23:52,711 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
15:23:52,712 (ScriptRunner.java:135) DEBUG - 
15:23:52,712 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:23:52,712 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:23:52,712 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
15:23:52,712 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
15:23:52,712 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
15:23:52,713 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
15:23:52,713 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
15:23:52,713 (ScriptRunner.java:135) DEBUG - );
15:23:52,713 (ScriptRunner.java:135) DEBUG - 
15:23:52,713 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
15:23:52,714 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
15:23:52,714 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
15:23:52,714 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
15:23:52,714 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
15:23:52,714 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
15:23:52,714 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
15:23:52,714 (ScriptRunner.java:135) DEBUG - );
15:23:52,714 (ScriptRunner.java:135) DEBUG - 
15:23:52,714 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:23:52,715 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:23:52,715 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
15:23:52,715 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
15:23:52,715 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
15:23:52,715 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:23:52,716 (ScriptRunner.java:135) DEBUG - );
15:23:52,716 (ScriptRunner.java:135) DEBUG - 
15:23:52,716 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
15:23:52,717 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
15:23:52,717 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
15:23:52,717 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
15:23:52,717 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
15:23:52,717 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
15:23:52,717 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
15:23:52,717 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
15:23:52,717 (ScriptRunner.java:135) DEBUG - );
15:23:52,717 (ScriptRunner.java:135) DEBUG - 
15:23:52,718 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
15:23:52,718 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
15:23:52,718 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
15:23:52,719 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
15:23:52,719 (ScriptRunner.java:135) DEBUG - );
15:23:52,720 (ScriptRunner.java:135) DEBUG - 
15:23:52,721 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
15:23:52,721 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
15:23:52,721 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
15:23:52,721 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
15:23:52,721 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
15:23:52,721 (ScriptRunner.java:135) DEBUG - );
15:23:52,733 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,733 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
15:23:52,734 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
15:23:52,746 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
15:23:52,746 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
15:23:52,746 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
15:23:52,746 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
15:23:52,746 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
15:23:52,747 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
15:23:52,748 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
15:23:52,749 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
15:23:52,749 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
15:23:52,749 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
15:23:52,749 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
15:23:52,749 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
15:23:52,749 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
15:23:52,750 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
15:23:52,750 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
15:23:52,751 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
15:23:52,751 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
15:23:52,751 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
15:23:52,751 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
15:23:52,751 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
15:23:52,752 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
15:23:52,752 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
15:23:52,752 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
15:23:52,752 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
15:23:52,753 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:23:52,753 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:23:52,753 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,753 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
15:23:52,753 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
15:23:52,754 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
15:23:52,755 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
15:23:52,755 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
15:23:52,755 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
15:23:52,755 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
15:23:52,755 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
15:23:52,755 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
15:23:52,755 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
15:23:52,756 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
15:23:52,756 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
15:23:52,756 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
15:23:52,756 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
15:23:52,756 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,756 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
15:23:52,757 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
15:23:52,757 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
15:23:52,758 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
15:23:52,758 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
15:23:52,758 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
15:23:52,758 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
15:23:52,758 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
15:23:52,758 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
15:23:52,758 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
15:23:52,759 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
15:23:52,759 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
15:23:52,759 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:52,759 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:52,759 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:23:52,759 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:23:52,759 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:23:52,759 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,760 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
15:23:52,760 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
15:23:52,760 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
15:23:52,760 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
15:23:52,760 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
15:23:52,760 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
15:23:52,760 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
15:23:52,760 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
15:23:52,761 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
15:23:52,761 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
15:23:52,761 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
15:23:52,761 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
15:23:52,761 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,761 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
15:23:52,761 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
15:23:52,763 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
15:23:52,764 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
15:23:52,764 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
15:23:52,764 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
15:23:52,764 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
15:23:52,764 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
15:23:52,764 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
15:23:52,764 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
15:23:52,765 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
15:23:52,765 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
15:23:52,765 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
15:23:52,765 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
15:23:52,765 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
15:23:52,765 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
15:23:52,765 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
15:23:52,766 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:52,766 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:52,766 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:23:52,766 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,766 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
15:23:52,766 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
15:23:52,766 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
15:23:52,766 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
15:23:52,766 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
15:23:52,767 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
15:23:52,767 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
15:23:52,767 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
15:23:52,767 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
15:23:52,767 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
15:23:52,767 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
15:23:52,767 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
15:23:52,767 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
15:23:52,767 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
15:23:52,768 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
15:23:52,768 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
15:23:52,768 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
15:23:52,768 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
15:23:52,768 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
15:23:52,768 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
15:23:52,768 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
15:23:52,768 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
15:23:52,769 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
15:23:52,769 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
15:23:52,769 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
15:23:52,769 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
15:23:52,769 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:52,769 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:52,769 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:23:52,769 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,770 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
15:23:52,770 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
15:23:52,770 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
15:23:52,771 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
15:23:52,771 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
15:23:52,772 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
15:23:52,772 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
15:23:52,772 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
15:23:52,772 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
15:23:52,772 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
15:23:52,772 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
15:23:52,772 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
15:23:52,772 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
15:23:52,772 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
15:23:52,772 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
15:23:52,773 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
15:23:52,773 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
15:23:52,773 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
15:23:52,773 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
15:23:52,773 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
15:23:52,773 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:52,773 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:52,773 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:23:52,774 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:23:52,774 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:23:52,774 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,774 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
15:23:52,774 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
15:23:52,774 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
15:23:52,774 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
15:23:52,774 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
15:23:52,774 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
15:23:52,775 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
15:23:52,776 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
15:23:52,776 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
15:23:52,776 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
15:23:52,776 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
15:23:52,776 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
15:23:52,776 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
15:23:52,776 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
15:23:52,777 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
15:23:52,777 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
15:23:52,777 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
15:23:52,777 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
15:23:52,777 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:23:52,777 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
15:23:52,777 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
15:23:52,778 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
15:23:52,779 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
15:23:52,779 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
15:23:52,779 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
15:23:52,779 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
15:23:52,779 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
15:23:52,781 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

15:23:52,781 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
15:23:52,781 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
15:23:52,781 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
15:23:52,781 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
15:23:52,782 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
15:23:52,782 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
15:23:52,782 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
15:23:52,782 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
15:23:52,782 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
15:23:52,782 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
15:23:52,782 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
15:23:52,782 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
15:23:52,782 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
15:23:52,782 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
15:23:52,782 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
15:23:52,782 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
15:23:52,783 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
15:23:52,783 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
15:23:52,783 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
15:23:52,783 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
15:23:52,783 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
15:23:52,783 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
15:23:52,784 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
15:23:52,787 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

15:23:52,787 (DBWorkload.java:260) INFO  - ======================================================================
15:23:52,791 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
15:23:52,791 (DBWorkload.java:305) DEBUG - Num groupings: 0
15:23:52,794 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
15:23:52,794 (DBWorkload.java:519) INFO  - ======================================================================
15:23:52,794 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
15:23:52,794 (DBWorkload.java:532) INFO  - ======================================================================
15:23:52,794 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
15:23:52,794 (DBWorkload.java:839) DEBUG - CommandLine load => true
15:23:52,794 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
15:23:52,794 (DBWorkload.java:798) DEBUG - Loading TPCC Database
15:23:53,227 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
15:23:53,228 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
15:23:53,506 (TPCCLoader.java:222) ERROR - Failed to load data for TPC-C
java.sql.BatchUpdateException: 批次处理 0 INSERT INTO ITEM VALUES (1, 'sxvnjhpdqdxvcra', 67.46, 'tvybcwvmgnykrORIGINALvzxkgxtspsjdgyluegqflaqlo', 5223) 被中止，呼叫 getNextException 以取得原因。
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:134)
	at org.postgresql.core.v3.QueryExecutorImpl$ErrorTrackingResultHandler.handleError(QueryExecutorImpl.java:325)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2024)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1204)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1229)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:1026)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1661)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.loadItems(TPCCLoader.java:209)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader$1.load(TPCCLoader.java:89)
	at com.oltpbenchmark.api.Loader$LoaderThread.run(Loader.java:75)
	at com.oltpbenchmark.util.ThreadUtil$LatchRunnable.run(ThreadUtil.java:343)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
15:23:53,506 (TPCCLoader.java:223) ERROR - BatchUpdateException Cause => ERROR: duplicate key value violates unique constraint "item_pkey"
  详细：Key (i_id)=(1) already exists.
15:23:53,507 (TPCCLoader.java:235) DEBUG - Rolling back changes from last batch
15:23:53,510 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
15:23:53,755 (TPCCLoader.java:276) DEBUG - ERROR: duplicate key value violates unique constraint "warehouse_pkey"
  详细：Key (w_id)=(1) already exists.
15:23:53,804 (TPCCLoader.java:365) DEBUG - 批次处理 0 INSERT INTO STOCK VALUES (1, 1, 30, 0.0, 0, 0, 'kjyavsqioORIGINALhbavojuyhnuppzlhjpggodvu', 'buuhokuprmirslwxlcgeadr', 'gqplivxapptaumghqeezueg', 'fmvmvvwnudwknglvgzyboah', 'bvzphaetieuojcqbmhcqiou', 'bhkbhtbjvllhhvyfjvyjksx', 'tgxsjqevfgvopphvrpcmblh', 'bcvmqhmsodhvdpkdteuvnan', 'rykedffowhaxsvkmefcdsvc', 'wnmstcvloktsejmodveiwvi', 'ficknmdneafcoicppvpteaz') 被中止，呼叫 getNextException 以取得原因。
15:23:53,818 (TPCCLoader.java:420) DEBUG - ERROR: duplicate key value violates unique constraint "district_pkey"
  详细：Key (d_w_id, d_id)=(1, 1) already exists.
15:23:53,869 (TPCCLoader.java:546) DEBUG - 批次处理 0 INSERT INTO CUSTOMER VALUES (1, 1, 1, 0.03280000016093254, 'GC', 'BARBARBAR', 'ktxeifhnga', 50000.0, -10.0, 10.0, 1, 0, 'smtrdthaivtlsl', 'gaflbbaisjxsvb', 'oxaqbvfosrdzs', 'WO', '957411111', '5004984069608678', '2022-02-18 15:23:53.822000+08', 'OE', 'oyurpdyuyhsmyhctejavurndsgukwsycwzpqrdlkgzlftmxvuruxolennkzazbybhqtsowcoyeoaymmewotgdvaaouqosbxntfibellpmsdzwgfbjcmjvugqfubaajpmohjrrytatpcaaloembvifxkqteuoieoswycqiajpatuaxhhjdxvsgzewuotlqbjwkynlctaaiorhinntctzdusqqugkaoveyhrnzdmfkiqgotgwstlsposqjzoimrslmakgmgputlrauazxiugpuvsjysijnaesflldgsfaksscbohroeezyrxfduycbiwzbwnixedhhsarhdxffvyhzhscmsxcbmcwixqsxpmpmbpzlxwlllmrtwnwucjensghfktcgzpvtpsnsixqszdskefupwnd') 被中止，呼叫 getNextException 以取得原因。
15:23:53,896 (TPCCLoader.java:703) DEBUG - 批次处理 0 INSERT INTO OORDER VALUES (1, 1, 1, 859, 8, 13, 1, '2022-02-18 15:23:53.873000+08') 被中止，呼叫 getNextException 以取得原因。
15:23:53,900 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=0.67s]
15:23:53,900 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
15:23:53,900 (DBWorkload.java:540) INFO  - Finished!
15:23:53,900 (DBWorkload.java:541) INFO  - ======================================================================
15:23:53,900 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
15:23:53,900 (DBWorkload.java:839) DEBUG - CommandLine execute => false
15:23:53,900 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 1, start from log number 31
15:27:02,441 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:27:02,445 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

15:27:02,445 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
15:27:02,445 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
15:27:02,446 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
15:27:02,447 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
15:27:02,447 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
15:27:02,447 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
15:27:02,447 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
15:27:02,447 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
15:27:02,447 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
15:27:02,448 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
15:27:02,448 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
15:27:02,448 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
15:27:02,448 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
15:27:02,448 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
15:27:02,448 (ScriptRunner.java:135) DEBUG - );
15:27:02,449 (ScriptRunner.java:135) DEBUG - 
15:27:02,449 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
15:27:02,450 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
15:27:02,450 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
15:27:02,451 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
15:27:02,451 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
15:27:02,451 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
15:27:02,451 (ScriptRunner.java:135) DEBUG - );
15:27:02,452 (ScriptRunner.java:135) DEBUG - 
15:27:02,452 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:27:02,452 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
15:27:02,452 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
15:27:02,453 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
15:27:02,453 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
15:27:02,454 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
15:27:02,454 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:27:02,454 (ScriptRunner.java:135) DEBUG - );
15:27:02,456 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
15:27:02,456 (ScriptRunner.java:135) DEBUG - 
15:27:02,456 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:27:02,456 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
15:27:02,456 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
15:27:02,456 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
15:27:02,457 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
15:27:02,457 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
15:27:02,457 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
15:27:02,457 (ScriptRunner.java:135) DEBUG - );
15:27:02,458 (ScriptRunner.java:135) DEBUG - 
15:27:02,458 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
15:27:02,458 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
15:27:02,458 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
15:27:02,458 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
15:27:02,459 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
15:27:02,459 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
15:27:02,459 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
15:27:02,459 (ScriptRunner.java:135) DEBUG - );
15:27:02,459 (ScriptRunner.java:135) DEBUG - 
15:27:02,459 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:27:02,459 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
15:27:02,459 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
15:27:02,459 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
15:27:02,459 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
15:27:02,460 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
15:27:02,460 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
15:27:02,460 (ScriptRunner.java:135) DEBUG - );
15:27:02,461 (ScriptRunner.java:135) DEBUG - 
15:27:02,461 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
15:27:02,461 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
15:27:02,461 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
15:27:02,461 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
15:27:02,462 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
15:27:02,462 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
15:27:02,462 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
15:27:02,462 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
15:27:02,462 (ScriptRunner.java:135) DEBUG - );
15:27:02,462 (ScriptRunner.java:135) DEBUG - 
15:27:02,462 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
15:27:02,462 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
15:27:02,463 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
15:27:02,464 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
15:27:02,464 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
15:27:02,464 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
15:27:02,464 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
15:27:02,464 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
15:27:02,464 (ScriptRunner.java:135) DEBUG - );
15:27:02,465 (ScriptRunner.java:135) DEBUG - 
15:27:02,465 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
15:27:02,465 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
15:27:02,466 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
15:27:02,466 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
15:27:02,466 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
15:27:02,466 (ScriptRunner.java:135) DEBUG - );
15:27:02,478 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,478 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
15:27:02,479 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
15:27:02,492 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
15:27:02,492 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
15:27:02,492 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
15:27:02,492 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
15:27:02,492 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
15:27:02,492 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
15:27:02,493 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
15:27:02,493 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
15:27:02,493 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
15:27:02,493 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
15:27:02,493 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
15:27:02,493 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
15:27:02,494 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
15:27:02,495 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
15:27:02,495 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
15:27:02,495 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
15:27:02,495 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
15:27:02,495 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
15:27:02,496 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
15:27:02,496 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
15:27:02,496 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
15:27:02,497 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
15:27:02,497 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
15:27:02,497 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
15:27:02,497 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
15:27:02,497 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
15:27:02,498 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
15:27:02,498 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
15:27:02,498 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
15:27:02,498 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
15:27:02,499 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:27:02,499 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
15:27:02,499 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,499 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
15:27:02,499 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
15:27:02,499 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
15:27:02,500 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
15:27:02,501 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
15:27:02,501 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
15:27:02,501 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
15:27:02,501 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
15:27:02,501 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
15:27:02,501 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
15:27:02,502 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
15:27:02,502 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
15:27:02,502 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
15:27:02,502 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
15:27:02,502 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
15:27:02,502 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,502 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
15:27:02,503 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
15:27:02,503 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
15:27:02,504 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
15:27:02,504 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
15:27:02,504 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
15:27:02,504 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
15:27:02,504 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
15:27:02,504 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
15:27:02,504 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
15:27:02,504 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
15:27:02,505 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
15:27:02,505 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:27:02,505 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:27:02,505 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
15:27:02,505 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:27:02,505 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
15:27:02,505 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,506 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
15:27:02,506 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
15:27:02,506 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
15:27:02,506 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
15:27:02,506 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
15:27:02,506 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
15:27:02,506 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
15:27:02,506 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
15:27:02,507 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
15:27:02,507 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
15:27:02,507 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
15:27:02,507 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
15:27:02,507 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,507 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
15:27:02,508 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
15:27:02,509 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
15:27:02,510 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
15:27:02,510 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
15:27:02,510 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
15:27:02,510 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
15:27:02,510 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
15:27:02,510 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
15:27:02,510 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
15:27:02,511 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
15:27:02,511 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
15:27:02,511 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
15:27:02,511 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
15:27:02,511 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
15:27:02,511 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
15:27:02,511 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
15:27:02,512 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:27:02,512 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:27:02,512 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
15:27:02,512 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,512 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
15:27:02,512 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
15:27:02,512 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
15:27:02,512 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
15:27:02,513 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
15:27:02,513 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
15:27:02,513 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
15:27:02,513 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
15:27:02,513 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
15:27:02,513 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
15:27:02,513 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
15:27:02,513 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
15:27:02,513 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
15:27:02,513 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
15:27:02,513 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
15:27:02,514 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
15:27:02,514 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
15:27:02,515 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
15:27:02,515 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
15:27:02,515 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
15:27:02,515 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:27:02,515 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:27:02,515 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
15:27:02,515 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,516 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
15:27:02,516 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
15:27:02,516 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
15:27:02,516 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
15:27:02,517 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
15:27:02,517 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
15:27:02,517 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
15:27:02,518 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
15:27:02,518 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
15:27:02,518 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
15:27:02,518 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
15:27:02,518 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
15:27:02,518 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
15:27:02,518 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
15:27:02,518 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
15:27:02,518 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
15:27:02,519 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
15:27:02,519 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
15:27:02,519 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
15:27:02,519 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
15:27:02,519 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
15:27:02,519 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:27:02,519 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:27:02,519 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
15:27:02,520 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:27:02,520 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
15:27:02,520 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,520 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
15:27:02,520 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
15:27:02,520 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
15:27:02,520 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
15:27:02,520 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
15:27:02,520 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
15:27:02,520 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
15:27:02,521 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
15:27:02,522 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
15:27:02,522 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
15:27:02,522 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
15:27:02,522 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
15:27:02,522 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
15:27:02,522 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
15:27:02,522 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
15:27:02,523 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
15:27:02,523 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
15:27:02,523 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
15:27:02,523 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
15:27:02,523 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
15:27:02,523 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
15:27:02,523 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
15:27:02,523 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
15:27:02,524 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
15:27:02,525 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
15:27:02,525 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
15:27:02,525 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
15:27:02,525 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
15:27:02,525 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
15:27:02,527 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

15:27:02,527 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
15:27:02,527 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
15:27:02,527 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
15:27:02,527 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
15:27:02,527 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
15:27:02,527 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
15:27:02,527 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
15:27:02,527 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
15:27:02,528 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
15:27:02,528 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
15:27:02,528 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
15:27:02,528 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
15:27:02,528 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
15:27:02,528 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
15:27:02,528 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
15:27:02,528 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
15:27:02,528 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
15:27:02,528 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
15:27:02,528 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
15:27:02,528 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
15:27:02,528 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
15:27:02,529 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
15:27:02,529 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
15:27:02,532 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

15:27:02,533 (DBWorkload.java:260) INFO  - ======================================================================
15:27:02,537 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
15:27:02,537 (DBWorkload.java:305) DEBUG - Num groupings: 0
15:27:02,540 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
15:27:02,540 (DBWorkload.java:519) INFO  - ======================================================================
15:27:02,540 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
15:27:02,540 (DBWorkload.java:532) INFO  - ======================================================================
15:27:02,540 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
15:27:02,540 (DBWorkload.java:839) DEBUG - CommandLine load => true
15:27:02,541 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
15:27:02,541 (DBWorkload.java:798) DEBUG - Loading TPCC Database
15:27:03,052 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
15:27:03,053 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
15:27:03,338 (TPCCLoader.java:222) ERROR - Failed to load data for TPC-C
java.sql.BatchUpdateException: 批次处理 0 INSERT INTO ITEM VALUES (1, 'sxvnjhpdqdxvcra', 10.16, 'tvybcwvmgnykrxvzxkgxtspsjdgyluegqflaqlocfl', 2967) 被中止，呼叫 getNextException 以取得原因。
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:134)
	at org.postgresql.core.v3.QueryExecutorImpl$ErrorTrackingResultHandler.handleError(QueryExecutorImpl.java:325)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2024)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1204)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1229)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:1026)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1661)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.loadItems(TPCCLoader.java:209)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader$1.load(TPCCLoader.java:89)
	at com.oltpbenchmark.api.Loader$LoaderThread.run(Loader.java:75)
	at com.oltpbenchmark.util.ThreadUtil$LatchRunnable.run(ThreadUtil.java:343)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
15:27:03,338 (TPCCLoader.java:223) ERROR - BatchUpdateException Cause => ERROR: duplicate key value violates unique constraint "item_pkey"
  详细：Key (i_id)=(1) already exists.
15:27:03,338 (TPCCLoader.java:235) DEBUG - Rolling back changes from last batch
15:27:03,342 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
15:27:12,132 (TPCCLoader.java:365) DEBUG - 批次处理 0 INSERT INTO STOCK VALUES (1, 9001, 27, 0.0, 0, 0, 'ygooovzgzgydfnkzczqmmfxwejo', 'vfmhskxsmonxirumgaaupcw', 'uungnihltwmzfspulrwyisa', 'dxqpssdodnvslesryyiozuh', 'ctbnifpbogmpkhuzhpvtjyd', 'xamvvobdjofgznemmqjfisj', 'jmbuystepgifsvrzgaupdzm', 'cxgvqybmalvyyjupgqmgixn', 'auczwzuxinlykfbkgavvssr', 'cpoeleferkhfvixkhhdrtus', 'xdnobhilmxzhpzijjuxrtdi') 被中止，呼叫 getNextException 以取得原因。
15:29:40,934 (TPCCLoader.java:703) DEBUG - 批次处理 0 INSERT INTO ORDER_LINE VALUES (1, 1, 1, 1, 72790, '2022-02-18 15:29:40.803000+08', 0.0, 1, 5.0, 'dykkyhbbfuflaxoaigjjxjy') 被中止，呼叫 getNextException 以取得原因。
15:29:40,939 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=157.89s]
15:29:40,939 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
15:29:40,939 (DBWorkload.java:540) INFO  - Finished!
15:29:40,939 (DBWorkload.java:541) INFO  - ======================================================================
15:29:40,939 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
15:29:40,939 (DBWorkload.java:839) DEBUG - CommandLine execute => false
15:29:40,939 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 1, start from log number 32
16:23:02,955 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:23:02,959 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

16:23:02,959 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:23:02,960 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
16:23:02,960 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
16:23:02,961 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
16:23:02,961 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
16:23:02,961 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
16:23:02,961 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
16:23:02,962 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
16:23:02,962 (ScriptRunner.java:135) DEBUG - );
16:23:02,963 (ScriptRunner.java:135) DEBUG - 
16:23:02,964 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
16:23:02,964 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
16:23:02,964 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
16:23:02,965 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
16:23:02,965 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
16:23:02,965 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
16:23:02,965 (ScriptRunner.java:135) DEBUG - );
16:23:02,966 (ScriptRunner.java:135) DEBUG - 
16:23:02,966 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:23:02,966 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:23:02,966 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
16:23:02,966 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
16:23:02,966 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
16:23:02,967 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
16:23:02,968 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
16:23:02,968 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
16:23:02,968 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
16:23:02,968 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
16:23:02,968 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
16:23:02,968 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:23:02,968 (ScriptRunner.java:135) DEBUG - );
16:23:02,970 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
16:23:02,970 (ScriptRunner.java:135) DEBUG - 
16:23:02,970 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:23:02,970 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:23:02,970 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
16:23:02,970 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
16:23:02,970 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
16:23:02,970 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
16:23:02,970 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
16:23:02,970 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
16:23:02,970 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
16:23:02,971 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
16:23:02,971 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
16:23:02,971 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
16:23:02,971 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
16:23:02,971 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
16:23:02,971 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
16:23:02,971 (ScriptRunner.java:135) DEBUG - );
16:23:02,972 (ScriptRunner.java:135) DEBUG - 
16:23:02,972 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
16:23:02,972 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
16:23:02,972 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
16:23:02,972 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
16:23:02,972 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
16:23:02,972 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
16:23:02,972 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
16:23:02,972 (ScriptRunner.java:135) DEBUG - );
16:23:02,973 (ScriptRunner.java:135) DEBUG - 
16:23:02,973 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:23:02,973 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:23:02,973 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
16:23:02,973 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
16:23:02,973 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
16:23:02,974 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
16:23:02,974 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
16:23:02,974 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:23:02,974 (ScriptRunner.java:135) DEBUG - );
16:23:02,975 (ScriptRunner.java:135) DEBUG - 
16:23:02,975 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
16:23:02,975 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
16:23:02,975 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
16:23:02,975 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
16:23:02,975 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
16:23:02,975 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
16:23:02,975 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
16:23:02,975 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
16:23:02,975 (ScriptRunner.java:135) DEBUG - );
16:23:02,976 (ScriptRunner.java:135) DEBUG - 
16:23:02,976 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
16:23:02,976 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
16:23:02,976 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
16:23:02,977 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
16:23:02,977 (ScriptRunner.java:135) DEBUG - );
16:23:02,978 (ScriptRunner.java:135) DEBUG - 
16:23:02,979 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
16:23:02,979 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
16:23:02,979 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
16:23:02,979 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
16:23:02,979 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
16:23:02,979 (ScriptRunner.java:135) DEBUG - );
16:23:02,991 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:02,991 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
16:23:02,992 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
16:23:03,004 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
16:23:03,004 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
16:23:03,004 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
16:23:03,004 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
16:23:03,004 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
16:23:03,005 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
16:23:03,006 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
16:23:03,007 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
16:23:03,007 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
16:23:03,007 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
16:23:03,007 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
16:23:03,008 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
16:23:03,008 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
16:23:03,008 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
16:23:03,009 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
16:23:03,009 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
16:23:03,009 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
16:23:03,010 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
16:23:03,010 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
16:23:03,010 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
16:23:03,010 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
16:23:03,010 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
16:23:03,010 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
16:23:03,011 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:23:03,011 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:23:03,011 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,012 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
16:23:03,012 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
16:23:03,012 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
16:23:03,012 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
16:23:03,012 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
16:23:03,012 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
16:23:03,012 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
16:23:03,013 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
16:23:03,013 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
16:23:03,013 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
16:23:03,013 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
16:23:03,013 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
16:23:03,013 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
16:23:03,013 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
16:23:03,014 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
16:23:03,014 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
16:23:03,014 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
16:23:03,014 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
16:23:03,014 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
16:23:03,014 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
16:23:03,014 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
16:23:03,015 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
16:23:03,015 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,015 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
16:23:03,015 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
16:23:03,015 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
16:23:03,015 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
16:23:03,015 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
16:23:03,016 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
16:23:03,016 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
16:23:03,016 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
16:23:03,016 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
16:23:03,016 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
16:23:03,016 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
16:23:03,016 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
16:23:03,016 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
16:23:03,017 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
16:23:03,017 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
16:23:03,017 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
16:23:03,017 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
16:23:03,017 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
16:23:03,017 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:23:03,017 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:23:03,018 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:23:03,018 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:23:03,018 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:23:03,018 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,018 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
16:23:03,018 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
16:23:03,018 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
16:23:03,018 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
16:23:03,019 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
16:23:03,019 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
16:23:03,019 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
16:23:03,019 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
16:23:03,019 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
16:23:03,019 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
16:23:03,019 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
16:23:03,019 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
16:23:03,020 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,020 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
16:23:03,020 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
16:23:03,022 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
16:23:03,022 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
16:23:03,022 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
16:23:03,022 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
16:23:03,023 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
16:23:03,023 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
16:23:03,023 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
16:23:03,023 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
16:23:03,023 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
16:23:03,023 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
16:23:03,023 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
16:23:03,023 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
16:23:03,024 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
16:23:03,024 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
16:23:03,024 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
16:23:03,024 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:23:03,024 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:23:03,024 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:23:03,024 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,024 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
16:23:03,025 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
16:23:03,025 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
16:23:03,026 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
16:23:03,026 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
16:23:03,026 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
16:23:03,026 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
16:23:03,026 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
16:23:03,026 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
16:23:03,027 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
16:23:03,028 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:23:03,028 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:23:03,028 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:23:03,028 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,028 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
16:23:03,028 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
16:23:03,029 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
16:23:03,030 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
16:23:03,030 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
16:23:03,030 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
16:23:03,030 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
16:23:03,030 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
16:23:03,030 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
16:23:03,030 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
16:23:03,030 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
16:23:03,031 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
16:23:03,031 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
16:23:03,032 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:23:03,032 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:23:03,032 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:23:03,032 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:23:03,032 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:23:03,032 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,032 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
16:23:03,032 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
16:23:03,033 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
16:23:03,034 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
16:23:03,034 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
16:23:03,035 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
16:23:03,035 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
16:23:03,035 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
16:23:03,035 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
16:23:03,035 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
16:23:03,035 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
16:23:03,035 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
16:23:03,035 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
16:23:03,036 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
16:23:03,036 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
16:23:03,036 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:03,036 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
16:23:03,036 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
16:23:03,036 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
16:23:03,036 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
16:23:03,036 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
16:23:03,036 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
16:23:03,037 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
16:23:03,037 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
16:23:03,037 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
16:23:03,037 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
16:23:03,037 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
16:23:03,037 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
16:23:03,037 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
16:23:03,037 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
16:23:03,037 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
16:23:03,038 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
16:23:03,039 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

16:23:03,039 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
16:23:03,039 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
16:23:03,040 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
16:23:03,040 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
16:23:03,040 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
16:23:03,040 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
16:23:03,040 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
16:23:03,040 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
16:23:03,040 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
16:23:03,040 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
16:23:03,040 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
16:23:03,040 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
16:23:03,040 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
16:23:03,040 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
16:23:03,040 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
16:23:03,040 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
16:23:03,041 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
16:23:03,041 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
16:23:03,041 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
16:23:03,041 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
16:23:03,041 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
16:23:03,041 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
16:23:03,042 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
16:23:03,045 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

16:23:03,045 (DBWorkload.java:260) INFO  - ======================================================================
16:23:03,050 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
16:23:03,050 (DBWorkload.java:305) DEBUG - Num groupings: 0
16:23:03,053 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
16:23:03,053 (DBWorkload.java:519) INFO  - ======================================================================
16:23:03,053 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
16:23:03,054 (DBWorkload.java:532) INFO  - ======================================================================
16:23:03,054 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
16:23:03,054 (DBWorkload.java:839) DEBUG - CommandLine load => true
16:23:03,054 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
16:23:03,054 (DBWorkload.java:798) DEBUG - Loading TPCC Database
16:23:03,799 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
16:23:03,800 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
16:23:04,210 (TPCCLoader.java:222) ERROR - Failed to load data for TPC-C
java.sql.BatchUpdateException: 批次处理 0 INSERT INTO ITEM VALUES (1, 'sxvnjhpdqdxvcrastvy', 15.48, 'cwvmgnykrxvzxkgxtspsjdgyluegqflaqlocfljbe', 6850) 被中止，呼叫 getNextException 以取得原因。
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:134)
	at org.postgresql.core.v3.QueryExecutorImpl$ErrorTrackingResultHandler.handleError(QueryExecutorImpl.java:325)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2024)
	at org.postgresql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1204)
	at org.postgresql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1229)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:1026)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1661)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.loadItems(TPCCLoader.java:209)
	at com.oltpbenchmark.benchmarks.tpcc.TPCCLoader$1.load(TPCCLoader.java:89)
	at com.oltpbenchmark.api.Loader$LoaderThread.run(Loader.java:75)
	at com.oltpbenchmark.util.ThreadUtil$LatchRunnable.run(ThreadUtil.java:343)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
16:23:04,210 (TPCCLoader.java:223) ERROR - BatchUpdateException Cause => ERROR: duplicate key value violates unique constraint "item_pkey"
  详细：Key (i_id)=(1) already exists.
16:23:04,210 (TPCCLoader.java:235) DEBUG - Rolling back changes from last batch
16:23:04,216 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
16:23:04,462 (TPCCLoader.java:276) DEBUG - ERROR: duplicate key value violates unique constraint "warehouse_pkey"
  详细：Key (w_id)=(1) already exists.
16:23:04,508 (TPCCLoader.java:365) DEBUG - 批次处理 0 INSERT INTO STOCK VALUES (1, 1, 76, 0.0, 0, 0, 'ubtqodsjldnORIGINALnkbdnvgpewrkraiivdzcjl', 'coxetgnropyekouznqisezi', 'lzkuauqglizzsgifbkycpka', 'nsviplkdwvxqpmmwivgfkyb', 'ddbveglkuzqbwwewsuszvmo', 'jxeaoeqhqcvuvxytmdclxib', 'tstkzzdwwehuaobrvcaxgtg', 'qtxrxkmuphozeuvzwwuibyn', 'tvjqbtjuuypxielhrbheswc', 'khgjszyxbfnctiapxubnpbl', 'csfmevxctspspdhzdmuzgli') 被中止，呼叫 getNextException 以取得原因。
16:23:04,525 (TPCCLoader.java:420) DEBUG - ERROR: duplicate key value violates unique constraint "district_pkey"
  详细：Key (d_w_id, d_id)=(1, 1) already exists.
16:23:04,579 (TPCCLoader.java:546) DEBUG - 批次处理 0 INSERT INTO CUSTOMER VALUES (1, 1, 1, 0.08449999988079071, 'GC', 'BARBARBAR', 'qnbermbvk', 50000.0, -10.0, 10.0, 1, 0, 'gkqzysaps', 'mksmfzmunkhiiiic', 'iburypeallafg', 'WN', '862111111', '9229266002109303', '2022-02-18 16:23:04.529000+08', 'OE', 'mhjfoioaljhbjrrahoijafnzbkxryurzmluzoeyqnayltlahsyztfkduaiycmanizrjaqmcqokbndgtrldiaksmomvhhviagejwssmblqfjpjzffkppbydwpprvvbabwtfmgaxzmxlirqxuoiubaoxecqbxssdouaviwnxhdiantymxngxcqcwbsmpycsrovetbofpxwyejntiwadrguauxklvscjktmczeiqddgdlftmzwkbtclechfjgixtnrxzfoipeexgtcyugveosgyauqctjuzzsmrnlavldocvbvqpktxeifhngaqsmtrdthaivtlslagaflbbaisjxsvbvoxaqbvfosrdzsowoppzbgjhmsadiqkazkeaobccoyurpdyuyhsmyhctejavurnds') 被中止，呼叫 getNextException 以取得原因。
16:23:04,846 (TPCCLoader.java:703) DEBUG - 批次处理 0 INSERT INTO ORDER_LINE VALUES (1, 1, 1, 1, 60014, '2022-02-18 16:23:04.583000+08', 0.0, 1, 5.0, 'aqarkvwrrgrorrgsinyoqib') 被中止，呼叫 getNextException 以取得原因。
16:23:04,851 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=1.05s]
16:23:04,851 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
16:23:04,851 (DBWorkload.java:540) INFO  - Finished!
16:23:04,851 (DBWorkload.java:541) INFO  - ======================================================================
16:23:04,851 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
16:23:04,851 (DBWorkload.java:839) DEBUG - CommandLine execute => false
16:23:04,851 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 1, start from log number 32
16:23:40,668 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:23:40,672 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

16:23:40,672 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:23:40,672 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
16:23:40,673 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
16:23:40,674 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
16:23:40,674 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
16:23:40,674 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
16:23:40,674 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
16:23:40,674 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
16:23:40,674 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
16:23:40,675 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
16:23:40,675 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
16:23:40,675 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
16:23:40,675 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
16:23:40,675 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
16:23:40,675 (ScriptRunner.java:135) DEBUG - );
16:23:40,676 (ScriptRunner.java:135) DEBUG - 
16:23:40,676 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
16:23:40,676 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
16:23:40,676 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
16:23:40,677 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
16:23:40,678 (ScriptRunner.java:135) DEBUG - );
16:23:40,679 (ScriptRunner.java:135) DEBUG - 
16:23:40,679 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:23:40,679 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:23:40,679 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
16:23:40,679 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
16:23:40,679 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
16:23:40,680 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
16:23:40,681 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:23:40,681 (ScriptRunner.java:135) DEBUG - );
16:23:40,682 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
16:23:40,683 (ScriptRunner.java:135) DEBUG - 
16:23:40,683 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:23:40,683 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:23:40,683 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
16:23:40,683 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
16:23:40,683 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
16:23:40,684 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
16:23:40,684 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
16:23:40,684 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
16:23:40,684 (ScriptRunner.java:135) DEBUG - );
16:23:40,684 (ScriptRunner.java:135) DEBUG - 
16:23:40,685 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
16:23:40,685 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
16:23:40,685 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
16:23:40,685 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
16:23:40,685 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
16:23:40,685 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
16:23:40,685 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
16:23:40,685 (ScriptRunner.java:135) DEBUG - );
16:23:40,685 (ScriptRunner.java:135) DEBUG - 
16:23:40,686 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:23:40,686 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:23:40,686 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
16:23:40,686 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
16:23:40,686 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
16:23:40,687 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
16:23:40,687 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:23:40,687 (ScriptRunner.java:135) DEBUG - );
16:23:40,688 (ScriptRunner.java:135) DEBUG - 
16:23:40,688 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
16:23:40,688 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
16:23:40,688 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
16:23:40,688 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
16:23:40,688 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
16:23:40,688 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
16:23:40,688 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
16:23:40,688 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
16:23:40,688 (ScriptRunner.java:135) DEBUG - );
16:23:40,689 (ScriptRunner.java:135) DEBUG - 
16:23:40,689 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
16:23:40,689 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
16:23:40,689 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
16:23:40,690 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
16:23:40,690 (ScriptRunner.java:135) DEBUG - );
16:23:40,692 (ScriptRunner.java:135) DEBUG - 
16:23:40,692 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
16:23:40,692 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
16:23:40,692 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
16:23:40,693 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
16:23:40,693 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
16:23:40,693 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
16:23:40,693 (ScriptRunner.java:135) DEBUG - );
16:23:40,705 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,705 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
16:23:40,705 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
16:23:40,718 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
16:23:40,718 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
16:23:40,718 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
16:23:40,718 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
16:23:40,718 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
16:23:40,719 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
16:23:40,719 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
16:23:40,719 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
16:23:40,719 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
16:23:40,719 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
16:23:40,720 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
16:23:40,721 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
16:23:40,721 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
16:23:40,721 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
16:23:40,721 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
16:23:40,721 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
16:23:40,722 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
16:23:40,722 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
16:23:40,722 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
16:23:40,722 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
16:23:40,723 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
16:23:40,723 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
16:23:40,723 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
16:23:40,724 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
16:23:40,724 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
16:23:40,724 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
16:23:40,724 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
16:23:40,724 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
16:23:40,724 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
16:23:40,725 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:23:40,725 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:23:40,725 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,725 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
16:23:40,725 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
16:23:40,726 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
16:23:40,727 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
16:23:40,727 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
16:23:40,727 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
16:23:40,727 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
16:23:40,727 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
16:23:40,727 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
16:23:40,727 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
16:23:40,728 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
16:23:40,728 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
16:23:40,728 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
16:23:40,728 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
16:23:40,728 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
16:23:40,728 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
16:23:40,729 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,729 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
16:23:40,729 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
16:23:40,729 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
16:23:40,729 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
16:23:40,729 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
16:23:40,729 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
16:23:40,729 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
16:23:40,730 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
16:23:40,730 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
16:23:40,730 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
16:23:40,730 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
16:23:40,730 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
16:23:40,730 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
16:23:40,730 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
16:23:40,731 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
16:23:40,731 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
16:23:40,731 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
16:23:40,731 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
16:23:40,731 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:23:40,731 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:23:40,731 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:23:40,731 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:23:40,732 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:23:40,732 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,732 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
16:23:40,732 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
16:23:40,732 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
16:23:40,732 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
16:23:40,732 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
16:23:40,732 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
16:23:40,733 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
16:23:40,733 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
16:23:40,733 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
16:23:40,733 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
16:23:40,733 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
16:23:40,733 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
16:23:40,734 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,734 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
16:23:40,734 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
16:23:40,736 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
16:23:40,736 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
16:23:40,736 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
16:23:40,736 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
16:23:40,736 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
16:23:40,736 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
16:23:40,736 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
16:23:40,736 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
16:23:40,737 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
16:23:40,737 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
16:23:40,737 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
16:23:40,737 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
16:23:40,737 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
16:23:40,737 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
16:23:40,737 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
16:23:40,738 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:23:40,738 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:23:40,738 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:23:40,738 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,738 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
16:23:40,738 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
16:23:40,738 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
16:23:40,739 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
16:23:40,739 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
16:23:40,739 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
16:23:40,740 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
16:23:40,740 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
16:23:40,740 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
16:23:40,740 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
16:23:40,740 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
16:23:40,740 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
16:23:40,740 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
16:23:40,740 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
16:23:40,741 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
16:23:40,741 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
16:23:40,741 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
16:23:40,741 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
16:23:40,741 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
16:23:40,741 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
16:23:40,741 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:23:40,741 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:23:40,742 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:23:40,742 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,742 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
16:23:40,742 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
16:23:40,743 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
16:23:40,744 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
16:23:40,744 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
16:23:40,744 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
16:23:40,744 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
16:23:40,744 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
16:23:40,744 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
16:23:40,744 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
16:23:40,744 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
16:23:40,745 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
16:23:40,745 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:23:40,746 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:23:40,746 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:23:40,746 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:23:40,746 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:23:40,746 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,746 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
16:23:40,746 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
16:23:40,746 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
16:23:40,746 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
16:23:40,747 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
16:23:40,748 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
16:23:40,748 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
16:23:40,748 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
16:23:40,748 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
16:23:40,748 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
16:23:40,748 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
16:23:40,748 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
16:23:40,748 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
16:23:40,749 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
16:23:40,749 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
16:23:40,749 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
16:23:40,749 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
16:23:40,749 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
16:23:40,749 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
16:23:40,749 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:23:40,750 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
16:23:40,750 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
16:23:40,750 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
16:23:40,751 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
16:23:40,751 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
16:23:40,751 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
16:23:40,751 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
16:23:40,751 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
16:23:40,753 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

16:23:40,753 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
16:23:40,753 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
16:23:40,753 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
16:23:40,753 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
16:23:40,753 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
16:23:40,753 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
16:23:40,753 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
16:23:40,753 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
16:23:40,754 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
16:23:40,754 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
16:23:40,754 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
16:23:40,754 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
16:23:40,754 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
16:23:40,754 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
16:23:40,754 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
16:23:40,754 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
16:23:40,754 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
16:23:40,754 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
16:23:40,754 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
16:23:40,754 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
16:23:40,755 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
16:23:40,755 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
16:23:40,755 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
16:23:40,759 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

16:23:40,759 (DBWorkload.java:260) INFO  - ======================================================================
16:23:40,763 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
16:23:40,763 (DBWorkload.java:305) DEBUG - Num groupings: 0
16:23:40,766 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
16:23:40,766 (DBWorkload.java:519) INFO  - ======================================================================
16:23:40,766 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
16:23:40,766 (DBWorkload.java:532) INFO  - ======================================================================
16:23:40,766 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
16:23:40,766 (DBWorkload.java:839) DEBUG - CommandLine load => true
16:23:40,766 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
16:23:40,766 (DBWorkload.java:798) DEBUG - Loading TPCC Database
16:23:41,192 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
16:23:41,194 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
16:24:16,802 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
16:34:30,483 (TPCCLoader.java:696) DEBUG -   Writing final records 339514 of 0
16:34:31,170 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=649.98s]
16:34:31,171 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
16:34:31,171 (DBWorkload.java:540) INFO  - Finished!
16:34:31,171 (DBWorkload.java:541) INFO  - ======================================================================
16:34:31,171 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
16:34:31,171 (DBWorkload.java:839) DEBUG - CommandLine execute => false
16:34:31,171 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 2, start from log number 35
16:41:04,132 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:41:04,135 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

16:41:04,136 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:41:04,136 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
16:41:04,136 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
16:41:04,138 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
16:41:04,138 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
16:41:04,138 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
16:41:04,138 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
16:41:04,138 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
16:41:04,138 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
16:41:04,138 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
16:41:04,139 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
16:41:04,139 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
16:41:04,139 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
16:41:04,139 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
16:41:04,139 (ScriptRunner.java:135) DEBUG - );
16:41:04,140 (ScriptRunner.java:135) DEBUG - 
16:41:04,140 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
16:41:04,140 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
16:41:04,140 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
16:41:04,141 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
16:41:04,142 (ScriptRunner.java:135) DEBUG - );
16:41:04,143 (ScriptRunner.java:135) DEBUG - 
16:41:04,143 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:41:04,143 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:41:04,143 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
16:41:04,143 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
16:41:04,143 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
16:41:04,143 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
16:41:04,143 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
16:41:04,143 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
16:41:04,143 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
16:41:04,144 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
16:41:04,145 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
16:41:04,145 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:41:04,145 (ScriptRunner.java:135) DEBUG - );
16:41:04,146 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
16:41:04,147 (ScriptRunner.java:135) DEBUG - 
16:41:04,147 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:41:04,147 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:41:04,147 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
16:41:04,147 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
16:41:04,147 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
16:41:04,148 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
16:41:04,148 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
16:41:04,148 (ScriptRunner.java:135) DEBUG - );
16:41:04,149 (ScriptRunner.java:135) DEBUG - 
16:41:04,149 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
16:41:04,149 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
16:41:04,149 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
16:41:04,149 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
16:41:04,149 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
16:41:04,149 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
16:41:04,149 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
16:41:04,149 (ScriptRunner.java:135) DEBUG - );
16:41:04,150 (ScriptRunner.java:135) DEBUG - 
16:41:04,150 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:41:04,150 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:41:04,150 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
16:41:04,150 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
16:41:04,150 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
16:41:04,151 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
16:41:04,151 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:41:04,151 (ScriptRunner.java:135) DEBUG - );
16:41:04,151 (ScriptRunner.java:135) DEBUG - 
16:41:04,152 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
16:41:04,152 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
16:41:04,152 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
16:41:04,152 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
16:41:04,152 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
16:41:04,152 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
16:41:04,152 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
16:41:04,152 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
16:41:04,152 (ScriptRunner.java:135) DEBUG - );
16:41:04,153 (ScriptRunner.java:135) DEBUG - 
16:41:04,153 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
16:41:04,153 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
16:41:04,153 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
16:41:04,154 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
16:41:04,154 (ScriptRunner.java:135) DEBUG - );
16:41:04,155 (ScriptRunner.java:135) DEBUG - 
16:41:04,156 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
16:41:04,156 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
16:41:04,156 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
16:41:04,156 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
16:41:04,156 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
16:41:04,157 (ScriptRunner.java:135) DEBUG - );
16:41:04,168 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,168 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
16:41:04,169 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
16:41:04,182 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
16:41:04,182 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
16:41:04,182 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
16:41:04,182 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
16:41:04,182 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
16:41:04,183 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
16:41:04,183 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
16:41:04,183 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
16:41:04,183 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
16:41:04,183 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
16:41:04,183 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
16:41:04,184 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
16:41:04,185 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
16:41:04,185 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
16:41:04,185 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
16:41:04,185 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
16:41:04,185 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
16:41:04,185 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
16:41:04,186 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
16:41:04,186 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
16:41:04,186 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
16:41:04,187 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
16:41:04,187 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
16:41:04,187 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
16:41:04,188 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
16:41:04,188 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
16:41:04,188 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
16:41:04,188 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
16:41:04,188 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
16:41:04,188 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
16:41:04,189 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:41:04,189 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:41:04,189 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,189 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
16:41:04,189 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
16:41:04,190 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
16:41:04,191 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
16:41:04,191 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
16:41:04,191 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
16:41:04,191 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
16:41:04,191 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
16:41:04,191 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
16:41:04,192 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
16:41:04,192 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
16:41:04,192 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
16:41:04,192 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
16:41:04,192 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
16:41:04,192 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
16:41:04,193 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
16:41:04,193 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,193 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
16:41:04,193 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
16:41:04,193 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
16:41:04,193 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
16:41:04,193 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
16:41:04,193 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
16:41:04,194 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
16:41:04,194 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
16:41:04,194 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
16:41:04,194 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
16:41:04,194 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
16:41:04,194 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
16:41:04,194 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
16:41:04,195 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
16:41:04,195 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
16:41:04,195 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
16:41:04,195 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
16:41:04,195 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
16:41:04,195 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:41:04,195 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:41:04,195 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:41:04,196 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:41:04,196 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:41:04,196 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,196 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
16:41:04,196 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
16:41:04,196 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
16:41:04,196 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
16:41:04,196 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
16:41:04,197 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
16:41:04,197 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
16:41:04,197 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
16:41:04,197 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
16:41:04,197 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
16:41:04,197 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
16:41:04,197 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
16:41:04,198 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,198 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
16:41:04,198 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
16:41:04,200 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
16:41:04,200 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
16:41:04,200 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
16:41:04,200 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
16:41:04,201 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
16:41:04,201 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
16:41:04,201 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
16:41:04,201 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
16:41:04,201 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
16:41:04,201 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
16:41:04,201 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
16:41:04,202 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
16:41:04,202 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
16:41:04,202 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
16:41:04,202 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
16:41:04,202 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:41:04,202 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:41:04,202 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:41:04,202 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,203 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
16:41:04,203 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
16:41:04,203 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
16:41:04,204 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
16:41:04,204 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
16:41:04,204 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
16:41:04,204 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
16:41:04,204 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
16:41:04,204 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
16:41:04,204 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
16:41:04,204 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
16:41:04,205 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
16:41:04,206 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:41:04,206 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:41:04,206 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:41:04,206 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,206 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
16:41:04,206 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
16:41:04,207 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
16:41:04,208 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
16:41:04,208 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
16:41:04,208 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
16:41:04,208 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
16:41:04,208 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
16:41:04,208 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
16:41:04,208 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
16:41:04,208 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
16:41:04,209 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
16:41:04,209 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
16:41:04,210 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
16:41:04,210 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:41:04,210 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:41:04,210 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:41:04,210 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:41:04,210 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:41:04,210 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,210 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
16:41:04,210 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
16:41:04,211 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
16:41:04,212 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
16:41:04,212 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
16:41:04,212 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
16:41:04,213 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
16:41:04,213 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
16:41:04,213 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
16:41:04,213 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
16:41:04,213 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
16:41:04,213 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
16:41:04,213 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
16:41:04,214 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
16:41:04,214 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
16:41:04,214 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:04,214 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
16:41:04,214 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
16:41:04,214 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
16:41:04,214 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
16:41:04,214 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
16:41:04,214 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
16:41:04,214 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
16:41:04,215 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
16:41:04,215 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
16:41:04,215 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
16:41:04,215 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
16:41:04,215 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
16:41:04,215 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
16:41:04,215 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
16:41:04,215 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
16:41:04,215 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
16:41:04,217 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

16:41:04,217 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
16:41:04,217 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
16:41:04,217 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
16:41:04,218 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
16:41:04,218 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
16:41:04,218 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
16:41:04,218 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
16:41:04,218 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
16:41:04,218 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
16:41:04,218 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
16:41:04,218 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
16:41:04,218 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
16:41:04,218 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
16:41:04,218 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
16:41:04,218 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
16:41:04,218 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
16:41:04,219 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
16:41:04,219 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
16:41:04,219 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
16:41:04,219 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
16:41:04,219 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
16:41:04,219 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
16:41:04,220 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
16:41:04,223 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s2.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  2.0

16:41:04,223 (DBWorkload.java:260) INFO  - ======================================================================
16:41:04,228 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
16:41:04,228 (DBWorkload.java:305) DEBUG - Num groupings: 0
16:41:04,231 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
16:41:04,231 (DBWorkload.java:519) INFO  - ======================================================================
16:41:04,231 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
16:41:04,231 (DBWorkload.java:532) INFO  - ======================================================================
16:41:04,231 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
16:41:04,231 (DBWorkload.java:839) DEBUG - CommandLine load => true
16:41:04,231 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
16:41:04,231 (DBWorkload.java:798) DEBUG - Loading TPCC Database
k = 4, start from log number 39
16:41:46,249 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:41:46,252 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

16:41:46,252 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:41:46,253 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
16:41:46,253 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
16:41:46,254 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
16:41:46,254 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
16:41:46,254 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
16:41:46,255 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
16:41:46,256 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
16:41:46,256 (ScriptRunner.java:135) DEBUG - );
16:41:46,257 (ScriptRunner.java:135) DEBUG - 
16:41:46,257 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
16:41:46,257 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
16:41:46,257 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:41:46,257 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
16:41:46,257 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
16:41:46,257 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
16:41:46,257 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
16:41:46,258 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
16:41:46,258 (ScriptRunner.java:135) DEBUG - );
16:41:46,259 (ScriptRunner.java:135) DEBUG - 
16:41:46,259 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:41:46,259 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:41:46,259 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
16:41:46,259 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
16:41:46,259 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
16:41:46,260 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
16:41:46,261 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
16:41:46,261 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
16:41:46,261 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
16:41:46,261 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
16:41:46,261 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
16:41:46,261 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
16:41:46,261 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:41:46,261 (ScriptRunner.java:135) DEBUG - );
16:41:46,263 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
16:41:46,263 (ScriptRunner.java:135) DEBUG - 
16:41:46,263 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:41:46,263 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:41:46,263 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
16:41:46,263 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
16:41:46,263 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
16:41:46,263 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
16:41:46,263 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
16:41:46,264 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
16:41:46,264 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
16:41:46,264 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
16:41:46,264 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
16:41:46,264 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
16:41:46,264 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
16:41:46,264 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
16:41:46,264 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
16:41:46,264 (ScriptRunner.java:135) DEBUG - );
16:41:46,265 (ScriptRunner.java:135) DEBUG - 
16:41:46,265 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
16:41:46,265 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
16:41:46,265 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
16:41:46,265 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
16:41:46,265 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
16:41:46,265 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
16:41:46,265 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
16:41:46,265 (ScriptRunner.java:135) DEBUG - );
16:41:46,266 (ScriptRunner.java:135) DEBUG - 
16:41:46,266 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:41:46,266 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:41:46,266 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
16:41:46,266 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
16:41:46,266 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
16:41:46,266 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
16:41:46,266 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
16:41:46,266 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
16:41:46,267 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
16:41:46,267 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
16:41:46,267 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
16:41:46,267 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
16:41:46,267 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
16:41:46,267 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:41:46,267 (ScriptRunner.java:135) DEBUG - );
16:41:46,268 (ScriptRunner.java:135) DEBUG - 
16:41:46,268 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
16:41:46,268 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
16:41:46,268 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
16:41:46,268 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
16:41:46,268 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
16:41:46,268 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
16:41:46,268 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
16:41:46,268 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
16:41:46,269 (ScriptRunner.java:135) DEBUG - );
16:41:46,269 (ScriptRunner.java:135) DEBUG - 
16:41:46,269 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
16:41:46,269 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
16:41:46,269 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:41:46,269 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
16:41:46,269 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
16:41:46,270 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
16:41:46,271 (ScriptRunner.java:135) DEBUG - );
16:41:46,272 (ScriptRunner.java:135) DEBUG - 
16:41:46,272 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
16:41:46,272 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
16:41:46,272 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
16:41:46,272 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
16:41:46,272 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
16:41:46,272 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
16:41:46,272 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
16:41:46,273 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
16:41:46,273 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
16:41:46,273 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
16:41:46,273 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
16:41:46,273 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
16:41:46,273 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
16:41:46,273 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
16:41:46,273 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
16:41:46,273 (ScriptRunner.java:135) DEBUG - );
16:41:46,284 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,285 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
16:41:46,285 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
16:41:46,298 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
16:41:46,298 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
16:41:46,298 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
16:41:46,298 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
16:41:46,298 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
16:41:46,299 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
16:41:46,299 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
16:41:46,299 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
16:41:46,299 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
16:41:46,299 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
16:41:46,300 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
16:41:46,301 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
16:41:46,301 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
16:41:46,301 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
16:41:46,301 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
16:41:46,301 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
16:41:46,302 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
16:41:46,302 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
16:41:46,302 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
16:41:46,302 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
16:41:46,303 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
16:41:46,303 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
16:41:46,303 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
16:41:46,304 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
16:41:46,304 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
16:41:46,304 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
16:41:46,304 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
16:41:46,304 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
16:41:46,304 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
16:41:46,304 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
16:41:46,305 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:41:46,305 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:41:46,305 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,305 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
16:41:46,305 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
16:41:46,306 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
16:41:46,307 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
16:41:46,307 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
16:41:46,307 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
16:41:46,307 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
16:41:46,307 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
16:41:46,307 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
16:41:46,307 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
16:41:46,307 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
16:41:46,308 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
16:41:46,308 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
16:41:46,308 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
16:41:46,308 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
16:41:46,308 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
16:41:46,308 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,309 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
16:41:46,309 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
16:41:46,309 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
16:41:46,309 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
16:41:46,309 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
16:41:46,309 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
16:41:46,309 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
16:41:46,310 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
16:41:46,310 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
16:41:46,310 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
16:41:46,310 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
16:41:46,310 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
16:41:46,310 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
16:41:46,310 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
16:41:46,310 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
16:41:46,311 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
16:41:46,311 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
16:41:46,311 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
16:41:46,311 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:41:46,311 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:41:46,311 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:41:46,311 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:41:46,312 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:41:46,312 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,312 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
16:41:46,312 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
16:41:46,312 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
16:41:46,312 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
16:41:46,312 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
16:41:46,313 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
16:41:46,313 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
16:41:46,313 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
16:41:46,313 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
16:41:46,313 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
16:41:46,313 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
16:41:46,313 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
16:41:46,314 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,314 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
16:41:46,314 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
16:41:46,316 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
16:41:46,316 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
16:41:46,316 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
16:41:46,316 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
16:41:46,316 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
16:41:46,316 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
16:41:46,317 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
16:41:46,317 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
16:41:46,317 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
16:41:46,317 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
16:41:46,317 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
16:41:46,317 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
16:41:46,317 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
16:41:46,317 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
16:41:46,318 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
16:41:46,318 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:41:46,318 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:41:46,318 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:41:46,318 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,318 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
16:41:46,318 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
16:41:46,319 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
16:41:46,319 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
16:41:46,320 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
16:41:46,320 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
16:41:46,320 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
16:41:46,320 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
16:41:46,320 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
16:41:46,320 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
16:41:46,320 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
16:41:46,320 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
16:41:46,321 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
16:41:46,322 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:41:46,322 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:41:46,322 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:41:46,322 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,322 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
16:41:46,322 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
16:41:46,323 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
16:41:46,324 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
16:41:46,324 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
16:41:46,324 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
16:41:46,324 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
16:41:46,324 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
16:41:46,324 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
16:41:46,324 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
16:41:46,324 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
16:41:46,325 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
16:41:46,325 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
16:41:46,326 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:41:46,326 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:41:46,326 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:41:46,326 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:41:46,326 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:41:46,326 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,326 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
16:41:46,326 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
16:41:46,327 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
16:41:46,328 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
16:41:46,328 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
16:41:46,328 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
16:41:46,328 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
16:41:46,328 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
16:41:46,328 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
16:41:46,328 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
16:41:46,328 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
16:41:46,328 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
16:41:46,329 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
16:41:46,329 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
16:41:46,329 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
16:41:46,329 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
16:41:46,329 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
16:41:46,329 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
16:41:46,329 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
16:41:46,330 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
16:41:46,330 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:41:46,330 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
16:41:46,330 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
16:41:46,330 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
16:41:46,330 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
16:41:46,330 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
16:41:46,330 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
16:41:46,331 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
16:41:46,331 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
16:41:46,331 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
16:41:46,331 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
16:41:46,331 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
16:41:46,331 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
16:41:46,331 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
16:41:46,331 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
16:41:46,332 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
16:41:46,332 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
16:41:46,334 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

16:41:46,334 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
16:41:46,334 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
16:41:46,334 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
16:41:46,334 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
16:41:46,334 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
16:41:46,334 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
16:41:46,334 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
16:41:46,335 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
16:41:46,335 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
16:41:46,335 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
16:41:46,335 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
16:41:46,335 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
16:41:46,335 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
16:41:46,335 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
16:41:46,335 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
16:41:46,335 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
16:41:46,335 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
16:41:46,335 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
16:41:46,335 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
16:41:46,335 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
16:41:46,336 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
16:41:46,336 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
16:41:46,336 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
16:41:46,339 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s4.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  4.0

16:41:46,339 (DBWorkload.java:260) INFO  - ======================================================================
16:41:46,344 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
16:41:46,344 (DBWorkload.java:305) DEBUG - Num groupings: 0
16:41:46,347 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
16:41:46,347 (DBWorkload.java:519) INFO  - ======================================================================
16:41:46,347 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
16:41:46,347 (DBWorkload.java:532) INFO  - ======================================================================
16:41:46,347 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
16:41:46,347 (DBWorkload.java:839) DEBUG - CommandLine load => true
16:41:46,347 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
16:41:46,347 (DBWorkload.java:798) DEBUG - Loading TPCC Database
k = 8, start from log number 43
16:42:28,322 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:42:28,325 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

16:42:28,325 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
16:42:28,326 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
16:42:28,326 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
16:42:28,328 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
16:42:28,328 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
16:42:28,329 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
16:42:28,329 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
16:42:28,329 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
16:42:28,329 (ScriptRunner.java:135) DEBUG - );
16:42:28,330 (ScriptRunner.java:135) DEBUG - 
16:42:28,330 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
16:42:28,330 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
16:42:28,330 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:42:28,330 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
16:42:28,331 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
16:42:28,332 (ScriptRunner.java:135) DEBUG - );
16:42:28,333 (ScriptRunner.java:135) DEBUG - 
16:42:28,333 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:42:28,333 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
16:42:28,333 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
16:42:28,333 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
16:42:28,333 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
16:42:28,333 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
16:42:28,333 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
16:42:28,333 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
16:42:28,334 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
16:42:28,335 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
16:42:28,335 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
16:42:28,335 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
16:42:28,335 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
16:42:28,335 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
16:42:28,335 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:42:28,335 (ScriptRunner.java:135) DEBUG - );
16:42:28,337 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
16:42:28,337 (ScriptRunner.java:135) DEBUG - 
16:42:28,337 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:42:28,337 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
16:42:28,337 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
16:42:28,337 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
16:42:28,337 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
16:42:28,338 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
16:42:28,338 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
16:42:28,338 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
16:42:28,338 (ScriptRunner.java:135) DEBUG - );
16:42:28,339 (ScriptRunner.java:135) DEBUG - 
16:42:28,339 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
16:42:28,339 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
16:42:28,339 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
16:42:28,339 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
16:42:28,339 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
16:42:28,339 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
16:42:28,340 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
16:42:28,340 (ScriptRunner.java:135) DEBUG - );
16:42:28,340 (ScriptRunner.java:135) DEBUG - 
16:42:28,340 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:42:28,340 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
16:42:28,340 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
16:42:28,340 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
16:42:28,340 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
16:42:28,340 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
16:42:28,341 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
16:42:28,341 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
16:42:28,341 (ScriptRunner.java:135) DEBUG - );
16:42:28,342 (ScriptRunner.java:135) DEBUG - 
16:42:28,342 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
16:42:28,342 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
16:42:28,342 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
16:42:28,342 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
16:42:28,342 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
16:42:28,343 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
16:42:28,343 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
16:42:28,343 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
16:42:28,343 (ScriptRunner.java:135) DEBUG - );
16:42:28,343 (ScriptRunner.java:135) DEBUG - 
16:42:28,343 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
16:42:28,343 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
16:42:28,344 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
16:42:28,345 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
16:42:28,345 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
16:42:28,345 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
16:42:28,345 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
16:42:28,345 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
16:42:28,345 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
16:42:28,345 (ScriptRunner.java:135) DEBUG - );
16:42:28,346 (ScriptRunner.java:135) DEBUG - 
16:42:28,346 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
16:42:28,347 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
16:42:28,347 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
16:42:28,347 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
16:42:28,347 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
16:42:28,347 (ScriptRunner.java:135) DEBUG - );
16:42:28,359 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,359 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
16:42:28,360 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
16:42:28,372 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
16:42:28,372 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
16:42:28,373 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
16:42:28,373 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
16:42:28,373 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
16:42:28,373 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
16:42:28,373 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
16:42:28,373 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
16:42:28,374 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
16:42:28,374 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
16:42:28,374 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
16:42:28,374 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
16:42:28,374 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
16:42:28,374 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
16:42:28,375 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
16:42:28,376 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
16:42:28,376 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
16:42:28,376 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
16:42:28,376 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
16:42:28,376 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
16:42:28,377 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
16:42:28,378 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
16:42:28,379 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
16:42:28,379 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
16:42:28,379 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:42:28,380 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
16:42:28,380 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,380 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
16:42:28,380 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
16:42:28,380 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
16:42:28,380 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
16:42:28,380 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
16:42:28,381 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
16:42:28,382 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
16:42:28,382 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
16:42:28,382 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
16:42:28,382 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
16:42:28,382 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
16:42:28,382 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
16:42:28,382 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
16:42:28,383 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
16:42:28,383 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
16:42:28,383 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
16:42:28,383 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,383 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
16:42:28,383 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
16:42:28,384 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
16:42:28,384 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
16:42:28,385 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
16:42:28,385 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
16:42:28,385 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
16:42:28,385 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
16:42:28,385 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
16:42:28,385 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
16:42:28,385 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
16:42:28,386 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:42:28,386 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:42:28,386 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
16:42:28,386 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:42:28,386 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
16:42:28,386 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,386 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
16:42:28,386 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
16:42:28,387 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
16:42:28,387 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
16:42:28,387 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
16:42:28,387 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
16:42:28,387 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
16:42:28,387 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
16:42:28,387 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
16:42:28,387 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
16:42:28,388 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
16:42:28,388 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
16:42:28,388 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,388 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
16:42:28,388 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
16:42:28,390 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
16:42:28,390 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
16:42:28,391 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
16:42:28,391 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
16:42:28,391 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
16:42:28,391 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
16:42:28,391 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
16:42:28,391 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
16:42:28,391 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
16:42:28,392 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
16:42:28,392 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
16:42:28,392 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
16:42:28,392 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
16:42:28,392 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
16:42:28,392 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
16:42:28,392 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:42:28,392 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:42:28,393 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
16:42:28,393 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,393 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
16:42:28,393 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
16:42:28,393 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
16:42:28,393 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
16:42:28,393 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
16:42:28,393 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
16:42:28,394 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
16:42:28,394 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
16:42:28,394 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
16:42:28,394 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
16:42:28,394 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
16:42:28,394 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
16:42:28,394 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
16:42:28,394 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
16:42:28,394 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
16:42:28,395 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
16:42:28,395 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
16:42:28,396 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
16:42:28,396 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
16:42:28,396 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:42:28,396 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:42:28,396 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
16:42:28,396 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,396 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
16:42:28,396 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
16:42:28,397 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
16:42:28,397 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
16:42:28,397 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
16:42:28,397 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
16:42:28,397 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
16:42:28,398 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
16:42:28,398 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
16:42:28,398 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
16:42:28,398 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
16:42:28,398 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
16:42:28,398 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
16:42:28,398 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
16:42:28,398 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
16:42:28,398 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
16:42:28,399 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
16:42:28,399 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
16:42:28,399 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
16:42:28,399 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
16:42:28,399 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
16:42:28,399 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
16:42:28,399 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
16:42:28,399 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
16:42:28,399 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
16:42:28,400 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
16:42:28,400 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
16:42:28,400 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
16:42:28,400 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:42:28,400 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:42:28,400 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
16:42:28,400 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:42:28,400 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
16:42:28,401 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,401 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
16:42:28,401 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
16:42:28,401 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
16:42:28,401 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
16:42:28,401 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
16:42:28,401 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
16:42:28,401 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
16:42:28,402 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
16:42:28,402 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
16:42:28,403 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
16:42:28,403 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
16:42:28,403 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
16:42:28,403 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
16:42:28,403 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
16:42:28,403 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
16:42:28,404 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
16:42:28,404 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
16:42:28,404 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
16:42:28,404 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
16:42:28,404 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
16:42:28,404 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
16:42:28,404 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
16:42:28,405 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
16:42:28,405 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
16:42:28,406 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
16:42:28,406 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
16:42:28,406 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
16:42:28,406 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
16:42:28,408 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

16:42:28,408 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
16:42:28,408 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
16:42:28,408 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
16:42:28,408 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
16:42:28,408 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
16:42:28,408 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
16:42:28,408 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
16:42:28,408 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
16:42:28,408 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
16:42:28,408 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
16:42:28,408 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
16:42:28,409 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
16:42:28,409 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
16:42:28,409 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
16:42:28,409 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
16:42:28,409 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
16:42:28,409 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
16:42:28,409 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
16:42:28,409 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
16:42:28,409 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
16:42:28,409 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
16:42:28,409 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
16:42:28,410 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
16:42:28,413 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s8.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:54322/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  8.0

16:42:28,413 (DBWorkload.java:260) INFO  - ======================================================================
16:42:28,418 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
16:42:28,418 (DBWorkload.java:305) DEBUG - Num groupings: 0
16:42:28,421 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
16:42:28,421 (DBWorkload.java:519) INFO  - ======================================================================
16:42:28,421 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
16:42:28,421 (DBWorkload.java:532) INFO  - ======================================================================
16:42:28,421 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
16:42:28,421 (DBWorkload.java:839) DEBUG - CommandLine load => true
16:42:28,421 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
16:42:28,421 (DBWorkload.java:798) DEBUG - Loading TPCC Database
k = 4, start from log number 83
19:01:16,181 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
19:01:16,186 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

19:01:16,186 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
19:01:16,187 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
19:01:16,187 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
19:01:16,188 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
19:01:16,188 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
19:01:16,189 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
19:01:16,190 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
19:01:16,190 (ScriptRunner.java:135) DEBUG - );
19:01:16,191 (ScriptRunner.java:135) DEBUG - 
19:01:16,191 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
19:01:16,191 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
19:01:16,191 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
19:01:16,191 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
19:01:16,191 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
19:01:16,191 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
19:01:16,191 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
19:01:16,191 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
19:01:16,192 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
19:01:16,192 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
19:01:16,192 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
19:01:16,192 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
19:01:16,192 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
19:01:16,192 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
19:01:16,192 (ScriptRunner.java:135) DEBUG - );
19:01:16,193 (ScriptRunner.java:135) DEBUG - 
19:01:16,193 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
19:01:16,193 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
19:01:16,194 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
19:01:16,194 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
19:01:16,194 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
19:01:16,195 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
19:01:16,195 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
19:01:16,195 (ScriptRunner.java:135) DEBUG - );
19:01:16,197 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
19:01:16,197 (ScriptRunner.java:135) DEBUG - 
19:01:16,197 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
19:01:16,197 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
19:01:16,198 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
19:01:16,198 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
19:01:16,198 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
19:01:16,198 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
19:01:16,198 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
19:01:16,198 (ScriptRunner.java:135) DEBUG - );
19:01:16,199 (ScriptRunner.java:135) DEBUG - 
19:01:16,199 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
19:01:16,199 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
19:01:16,199 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
19:01:16,200 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
19:01:16,200 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
19:01:16,200 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
19:01:16,200 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
19:01:16,200 (ScriptRunner.java:135) DEBUG - );
19:01:16,200 (ScriptRunner.java:135) DEBUG - 
19:01:16,200 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
19:01:16,200 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
19:01:16,200 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
19:01:16,200 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
19:01:16,201 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
19:01:16,201 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
19:01:16,201 (ScriptRunner.java:135) DEBUG - );
19:01:16,202 (ScriptRunner.java:135) DEBUG - 
19:01:16,202 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
19:01:16,202 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
19:01:16,202 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
19:01:16,202 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
19:01:16,202 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
19:01:16,203 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
19:01:16,203 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
19:01:16,203 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
19:01:16,203 (ScriptRunner.java:135) DEBUG - );
19:01:16,203 (ScriptRunner.java:135) DEBUG - 
19:01:16,203 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
19:01:16,203 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
19:01:16,203 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
19:01:16,204 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
19:01:16,205 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
19:01:16,205 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
19:01:16,205 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
19:01:16,205 (ScriptRunner.java:135) DEBUG - );
19:01:16,206 (ScriptRunner.java:135) DEBUG - 
19:01:16,206 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
19:01:16,206 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
19:01:16,206 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
19:01:16,206 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
19:01:16,207 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
19:01:16,207 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
19:01:16,207 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
19:01:16,207 (ScriptRunner.java:135) DEBUG - );
19:01:16,219 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,220 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
19:01:16,220 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
19:01:16,236 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
19:01:16,236 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
19:01:16,237 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
19:01:16,238 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
19:01:16,238 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
19:01:16,238 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
19:01:16,238 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
19:01:16,238 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
19:01:16,238 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
19:01:16,239 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
19:01:16,239 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
19:01:16,239 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
19:01:16,239 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
19:01:16,239 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
19:01:16,240 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
19:01:16,240 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
19:01:16,240 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
19:01:16,240 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
19:01:16,240 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
19:01:16,241 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
19:01:16,241 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
19:01:16,242 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
19:01:16,242 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
19:01:16,242 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
19:01:16,243 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
19:01:16,243 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
19:01:16,243 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
19:01:16,243 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
19:01:16,243 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
19:01:16,243 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
19:01:16,244 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
19:01:16,244 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
19:01:16,244 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,244 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
19:01:16,245 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
19:01:16,245 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
19:01:16,245 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
19:01:16,245 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
19:01:16,245 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
19:01:16,245 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
19:01:16,246 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
19:01:16,246 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
19:01:16,246 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
19:01:16,246 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
19:01:16,246 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
19:01:16,246 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
19:01:16,246 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
19:01:16,246 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
19:01:16,247 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
19:01:16,247 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
19:01:16,247 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
19:01:16,247 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
19:01:16,247 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
19:01:16,247 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
19:01:16,248 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
19:01:16,248 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,248 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
19:01:16,248 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
19:01:16,248 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
19:01:16,248 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
19:01:16,248 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
19:01:16,248 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
19:01:16,249 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
19:01:16,249 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
19:01:16,249 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
19:01:16,249 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
19:01:16,249 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
19:01:16,249 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
19:01:16,250 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
19:01:16,250 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
19:01:16,250 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
19:01:16,250 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
19:01:16,250 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
19:01:16,250 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
19:01:16,251 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
19:01:16,251 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
19:01:16,251 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
19:01:16,251 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
19:01:16,251 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
19:01:16,251 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,251 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
19:01:16,251 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
19:01:16,252 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
19:01:16,252 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
19:01:16,252 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
19:01:16,252 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
19:01:16,252 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
19:01:16,252 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
19:01:16,252 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
19:01:16,253 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
19:01:16,253 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
19:01:16,253 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
19:01:16,253 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,253 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
19:01:16,253 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
19:01:16,256 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
19:01:16,256 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
19:01:16,256 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
19:01:16,256 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
19:01:16,256 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
19:01:16,256 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
19:01:16,257 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
19:01:16,257 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
19:01:16,257 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
19:01:16,257 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
19:01:16,257 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
19:01:16,257 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
19:01:16,257 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
19:01:16,257 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
19:01:16,258 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
19:01:16,258 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
19:01:16,258 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
19:01:16,258 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
19:01:16,258 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,258 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
19:01:16,258 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
19:01:16,259 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
19:01:16,259 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
19:01:16,261 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
19:01:16,261 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
19:01:16,261 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
19:01:16,261 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
19:01:16,261 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
19:01:16,262 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
19:01:16,263 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
19:01:16,263 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
19:01:16,263 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
19:01:16,263 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,263 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
19:01:16,263 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
19:01:16,264 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
19:01:16,264 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
19:01:16,264 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
19:01:16,264 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
19:01:16,265 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
19:01:16,265 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
19:01:16,265 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
19:01:16,265 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
19:01:16,265 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
19:01:16,265 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
19:01:16,265 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
19:01:16,265 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
19:01:16,265 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
19:01:16,266 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
19:01:16,266 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
19:01:16,266 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
19:01:16,266 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
19:01:16,266 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
19:01:16,266 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
19:01:16,266 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
19:01:16,266 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
19:01:16,266 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
19:01:16,267 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
19:01:16,267 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
19:01:16,267 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
19:01:16,267 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
19:01:16,267 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
19:01:16,267 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
19:01:16,267 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
19:01:16,268 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
19:01:16,268 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
19:01:16,268 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,268 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
19:01:16,268 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
19:01:16,268 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
19:01:16,268 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
19:01:16,268 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
19:01:16,268 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
19:01:16,269 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
19:01:16,270 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
19:01:16,270 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
19:01:16,270 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
19:01:16,270 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
19:01:16,270 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
19:01:16,270 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
19:01:16,271 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
19:01:16,271 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
19:01:16,271 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
19:01:16,271 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
19:01:16,271 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
19:01:16,271 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
19:01:16,271 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
19:01:16,272 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
19:01:16,272 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
19:01:16,272 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
19:01:16,272 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
19:01:16,272 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
19:01:16,272 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
19:01:16,272 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
19:01:16,272 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
19:01:16,272 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
19:01:16,273 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
19:01:16,273 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
19:01:16,273 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
19:01:16,273 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
19:01:16,273 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
19:01:16,273 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
19:01:16,273 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
19:01:16,274 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
19:01:16,275 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

19:01:16,276 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
19:01:16,276 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
19:01:16,276 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
19:01:16,276 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
19:01:16,276 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
19:01:16,276 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
19:01:16,276 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
19:01:16,276 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
19:01:16,276 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
19:01:16,276 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
19:01:16,276 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
19:01:16,276 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
19:01:16,277 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
19:01:16,277 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
19:01:16,277 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
19:01:16,277 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
19:01:16,277 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
19:01:16,277 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
19:01:16,277 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
19:01:16,277 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
19:01:16,277 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
19:01:16,277 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
19:01:16,279 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
19:01:16,283 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s4.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:5432/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  4.0

19:01:16,283 (DBWorkload.java:260) INFO  - ======================================================================
19:01:16,289 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
19:01:16,289 (DBWorkload.java:305) DEBUG - Num groupings: 0
19:01:16,292 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
19:01:16,293 (DBWorkload.java:519) INFO  - ======================================================================
19:01:16,293 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
19:01:16,293 (DBWorkload.java:532) INFO  - ======================================================================
19:01:16,293 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
19:01:16,293 (DBWorkload.java:839) DEBUG - CommandLine load => true
19:01:16,293 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
19:01:16,293 (DBWorkload.java:798) DEBUG - Loading TPCC Database
19:01:16,358 (BenchmarkModule.java:320) DEBUG - Starting 5 TPCCLoader.LoaderThreads [maxConcurrent=8]
19:01:16,360 (ThreadUtil.java:294) DEBUG - Executing 5 threads and blocking until they finish
19:01:17,867 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 2
19:01:17,867 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 4
19:01:17,867 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 3
19:01:17,867 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
19:03:25,328 (TPCCLoader.java:696) DEBUG -   Writing final records 340020 of 0
19:03:27,567 (TPCCLoader.java:696) DEBUG -   Writing final records 339234 of 0
19:03:27,863 (TPCCLoader.java:696) DEBUG -   Writing final records 338309 of 0
19:03:31,252 (TPCCLoader.java:696) DEBUG -   Writing final records 339711 of 0
19:03:31,307 (ThreadUtil.java:314) DEBUG - Finished executing 5 threads [time=134.94s]
19:03:31,307 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
19:03:31,308 (DBWorkload.java:540) INFO  - Finished!
19:03:31,308 (DBWorkload.java:541) INFO  - ======================================================================
19:03:31,308 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
19:03:31,308 (DBWorkload.java:839) DEBUG - CommandLine execute => false
19:03:31,308 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 4, start from log number 87
09:15:36,085 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
09:15:36,090 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

09:15:36,090 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
09:15:36,090 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
09:15:36,091 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
09:15:36,092 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
09:15:36,092 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
09:15:36,092 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
09:15:36,092 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
09:15:36,093 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
09:15:36,093 (ScriptRunner.java:135) DEBUG - );
09:15:36,094 (ScriptRunner.java:135) DEBUG - 
09:15:36,094 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
09:15:36,095 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
09:15:36,095 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
09:15:36,096 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
09:15:36,096 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
09:15:36,096 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
09:15:36,096 (ScriptRunner.java:135) DEBUG - );
09:15:36,097 (ScriptRunner.java:135) DEBUG - 
09:15:36,097 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
09:15:36,097 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
09:15:36,097 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
09:15:36,097 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
09:15:36,097 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
09:15:36,097 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
09:15:36,097 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
09:15:36,098 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
09:15:36,099 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
09:15:36,099 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
09:15:36,099 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
09:15:36,099 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
09:15:36,099 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
09:15:36,099 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
09:15:36,099 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
09:15:36,099 (ScriptRunner.java:135) DEBUG - );
09:15:36,101 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
09:15:36,101 (ScriptRunner.java:135) DEBUG - 
09:15:36,101 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
09:15:36,101 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
09:15:36,101 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
09:15:36,101 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
09:15:36,101 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
09:15:36,101 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
09:15:36,102 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
09:15:36,102 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
09:15:36,102 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
09:15:36,102 (ScriptRunner.java:135) DEBUG - );
09:15:36,103 (ScriptRunner.java:135) DEBUG - 
09:15:36,103 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
09:15:36,103 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
09:15:36,103 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
09:15:36,103 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
09:15:36,103 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
09:15:36,103 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
09:15:36,104 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
09:15:36,104 (ScriptRunner.java:135) DEBUG - );
09:15:36,104 (ScriptRunner.java:135) DEBUG - 
09:15:36,104 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
09:15:36,104 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
09:15:36,104 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
09:15:36,104 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
09:15:36,104 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
09:15:36,105 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
09:15:36,105 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
09:15:36,105 (ScriptRunner.java:135) DEBUG - );
09:15:36,106 (ScriptRunner.java:135) DEBUG - 
09:15:36,106 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
09:15:36,106 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
09:15:36,106 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
09:15:36,106 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
09:15:36,107 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
09:15:36,107 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
09:15:36,107 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
09:15:36,107 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
09:15:36,107 (ScriptRunner.java:135) DEBUG - );
09:15:36,107 (ScriptRunner.java:135) DEBUG - 
09:15:36,107 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
09:15:36,108 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
09:15:36,108 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
09:15:36,109 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
09:15:36,109 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
09:15:36,109 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
09:15:36,109 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
09:15:36,109 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
09:15:36,109 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
09:15:36,109 (ScriptRunner.java:135) DEBUG - );
09:15:36,110 (ScriptRunner.java:135) DEBUG - 
09:15:36,110 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
09:15:36,111 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
09:15:36,111 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
09:15:36,111 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
09:15:36,111 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
09:15:36,111 (ScriptRunner.java:135) DEBUG - );
09:15:36,123 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,123 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
09:15:36,124 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
09:15:36,136 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
09:15:36,137 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
09:15:36,137 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
09:15:36,137 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
09:15:36,137 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
09:15:36,137 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
09:15:36,137 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
09:15:36,138 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
09:15:36,138 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
09:15:36,138 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
09:15:36,138 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
09:15:36,138 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
09:15:36,138 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
09:15:36,139 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
09:15:36,139 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
09:15:36,140 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
09:15:36,140 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
09:15:36,140 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
09:15:36,140 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
09:15:36,141 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
09:15:36,142 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
09:15:36,143 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
09:15:36,143 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
09:15:36,143 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
09:15:36,144 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
09:15:36,144 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,144 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
09:15:36,144 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
09:15:36,144 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
09:15:36,144 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
09:15:36,145 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
09:15:36,146 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
09:15:36,146 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
09:15:36,146 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
09:15:36,146 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
09:15:36,146 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
09:15:36,146 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
09:15:36,147 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
09:15:36,147 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
09:15:36,147 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
09:15:36,147 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,147 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
09:15:36,147 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
09:15:36,148 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
09:15:36,148 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
09:15:36,148 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
09:15:36,149 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
09:15:36,149 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
09:15:36,149 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
09:15:36,149 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
09:15:36,149 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
09:15:36,149 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
09:15:36,150 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
09:15:36,150 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
09:15:36,150 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
09:15:36,150 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
09:15:36,150 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
09:15:36,150 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,150 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
09:15:36,150 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
09:15:36,151 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
09:15:36,151 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
09:15:36,151 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
09:15:36,151 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
09:15:36,151 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
09:15:36,151 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
09:15:36,151 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
09:15:36,151 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
09:15:36,152 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
09:15:36,152 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
09:15:36,152 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,152 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
09:15:36,152 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
09:15:36,154 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
09:15:36,154 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
09:15:36,154 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
09:15:36,154 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
09:15:36,155 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
09:15:36,155 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
09:15:36,155 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
09:15:36,155 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
09:15:36,155 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
09:15:36,155 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
09:15:36,156 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
09:15:36,156 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
09:15:36,156 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
09:15:36,156 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
09:15:36,156 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
09:15:36,156 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
09:15:36,156 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
09:15:36,156 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
09:15:36,157 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,157 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
09:15:36,157 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
09:15:36,157 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
09:15:36,157 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
09:15:36,157 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
09:15:36,157 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
09:15:36,157 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
09:15:36,157 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
09:15:36,158 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
09:15:36,158 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
09:15:36,158 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
09:15:36,158 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
09:15:36,158 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
09:15:36,158 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
09:15:36,158 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
09:15:36,158 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
09:15:36,159 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
09:15:36,160 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
09:15:36,160 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
09:15:36,160 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
09:15:36,160 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,160 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
09:15:36,160 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
09:15:36,161 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
09:15:36,162 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
09:15:36,162 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
09:15:36,162 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
09:15:36,162 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
09:15:36,162 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
09:15:36,162 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
09:15:36,162 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
09:15:36,163 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
09:15:36,163 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
09:15:36,164 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
09:15:36,164 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
09:15:36,164 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
09:15:36,164 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
09:15:36,164 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
09:15:36,164 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,164 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
09:15:36,164 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
09:15:36,165 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
09:15:36,166 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
09:15:36,166 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
09:15:36,167 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
09:15:36,167 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
09:15:36,167 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
09:15:36,167 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
09:15:36,167 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
09:15:36,167 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
09:15:36,167 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
09:15:36,167 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
09:15:36,168 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
09:15:36,168 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
09:15:36,168 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
09:15:36,168 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
09:15:36,168 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
09:15:36,168 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
09:15:36,169 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
09:15:36,169 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
09:15:36,169 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
09:15:36,169 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
09:15:36,170 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
09:15:36,170 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
09:15:36,171 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

09:15:36,172 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
09:15:36,172 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
09:15:36,172 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
09:15:36,172 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
09:15:36,172 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
09:15:36,172 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
09:15:36,172 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
09:15:36,172 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
09:15:36,172 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
09:15:36,172 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
09:15:36,172 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
09:15:36,173 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
09:15:36,173 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
09:15:36,173 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
09:15:36,173 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
09:15:36,173 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
09:15:36,173 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
09:15:36,173 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
09:15:36,173 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
09:15:36,173 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
09:15:36,173 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
09:15:36,173 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
09:15:36,175 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
09:15:36,179 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s4.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:5432/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  4.0

09:15:36,179 (DBWorkload.java:260) INFO  - ======================================================================
09:15:36,184 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
09:15:36,184 (DBWorkload.java:305) DEBUG - Num groupings: 0
09:15:36,188 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
09:15:36,188 (DBWorkload.java:519) INFO  - ======================================================================
09:15:36,188 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
09:15:36,188 (DBWorkload.java:532) INFO  - ======================================================================
09:15:36,188 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
09:15:36,188 (DBWorkload.java:839) DEBUG - CommandLine load => true
09:15:36,188 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
09:15:36,188 (DBWorkload.java:798) DEBUG - Loading TPCC Database
09:15:36,247 (BenchmarkModule.java:320) DEBUG - Starting 5 TPCCLoader.LoaderThreads [maxConcurrent=8]
09:15:36,249 (ThreadUtil.java:294) DEBUG - Executing 5 threads and blocking until they finish
09:15:37,816 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 2
09:15:37,816 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 4
09:15:37,816 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 3
09:15:37,816 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
09:17:19,120 (TPCCLoader.java:696) DEBUG -   Writing final records 339539 of 0
09:17:19,387 (TPCCLoader.java:696) DEBUG -   Writing final records 339881 of 0
09:17:22,027 (TPCCLoader.java:696) DEBUG -   Writing final records 339031 of 0
09:17:22,288 (TPCCLoader.java:696) DEBUG -   Writing final records 338223 of 0
09:17:22,314 (ThreadUtil.java:314) DEBUG - Finished executing 5 threads [time=106.06s]
09:17:22,314 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
09:17:22,316 (DBWorkload.java:540) INFO  - Finished!
09:17:22,316 (DBWorkload.java:541) INFO  - ======================================================================
09:17:22,316 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
09:17:22,316 (DBWorkload.java:839) DEBUG - CommandLine execute => false
09:17:22,316 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 4, start from log number 109
10:20:55,059 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
10:20:55,063 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

10:20:55,063 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
10:20:55,064 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
10:20:55,064 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
10:20:55,065 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
10:20:55,065 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
10:20:55,065 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
10:20:55,066 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
10:20:55,067 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
10:20:55,067 (ScriptRunner.java:135) DEBUG - );
10:20:55,068 (ScriptRunner.java:135) DEBUG - 
10:20:55,068 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
10:20:55,068 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
10:20:55,068 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
10:20:55,068 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
10:20:55,068 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
10:20:55,068 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
10:20:55,068 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
10:20:55,069 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
10:20:55,069 (ScriptRunner.java:135) DEBUG - );
10:20:55,070 (ScriptRunner.java:135) DEBUG - 
10:20:55,070 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
10:20:55,070 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
10:20:55,070 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
10:20:55,070 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
10:20:55,071 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
10:20:55,072 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
10:20:55,072 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
10:20:55,072 (ScriptRunner.java:135) DEBUG - );
10:20:55,074 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
10:20:55,074 (ScriptRunner.java:135) DEBUG - 
10:20:55,074 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
10:20:55,074 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
10:20:55,074 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
10:20:55,075 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
10:20:55,075 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
10:20:55,075 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
10:20:55,075 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
10:20:55,075 (ScriptRunner.java:135) DEBUG - );
10:20:55,076 (ScriptRunner.java:135) DEBUG - 
10:20:55,076 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
10:20:55,076 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
10:20:55,076 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
10:20:55,077 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
10:20:55,077 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
10:20:55,077 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
10:20:55,077 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
10:20:55,077 (ScriptRunner.java:135) DEBUG - );
10:20:55,077 (ScriptRunner.java:135) DEBUG - 
10:20:55,077 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
10:20:55,077 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
10:20:55,077 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
10:20:55,078 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
10:20:55,078 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
10:20:55,078 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
10:20:55,078 (ScriptRunner.java:135) DEBUG - );
10:20:55,079 (ScriptRunner.java:135) DEBUG - 
10:20:55,079 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
10:20:55,079 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
10:20:55,079 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
10:20:55,080 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
10:20:55,080 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
10:20:55,080 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
10:20:55,080 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
10:20:55,080 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
10:20:55,080 (ScriptRunner.java:135) DEBUG - );
10:20:55,080 (ScriptRunner.java:135) DEBUG - 
10:20:55,080 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
10:20:55,081 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
10:20:55,081 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
10:20:55,082 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
10:20:55,082 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
10:20:55,082 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
10:20:55,082 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
10:20:55,082 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
10:20:55,082 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
10:20:55,082 (ScriptRunner.java:135) DEBUG - );
10:20:55,083 (ScriptRunner.java:135) DEBUG - 
10:20:55,083 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
10:20:55,084 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
10:20:55,084 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
10:20:55,084 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
10:20:55,084 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
10:20:55,084 (ScriptRunner.java:135) DEBUG - );
10:20:55,096 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,097 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
10:20:55,097 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
10:20:55,110 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
10:20:55,110 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
10:20:55,110 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
10:20:55,110 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
10:20:55,111 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
10:20:55,111 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
10:20:55,111 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
10:20:55,111 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
10:20:55,111 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
10:20:55,111 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
10:20:55,112 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
10:20:55,113 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
10:20:55,113 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
10:20:55,113 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
10:20:55,113 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
10:20:55,113 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
10:20:55,114 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
10:20:55,114 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
10:20:55,114 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
10:20:55,114 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
10:20:55,115 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
10:20:55,115 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
10:20:55,116 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
10:20:55,116 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
10:20:55,117 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
10:20:55,117 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
10:20:55,117 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,117 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
10:20:55,118 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
10:20:55,118 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
10:20:55,119 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
10:20:55,119 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
10:20:55,119 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
10:20:55,119 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
10:20:55,119 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
10:20:55,119 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
10:20:55,119 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
10:20:55,119 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
10:20:55,120 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
10:20:55,120 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
10:20:55,120 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
10:20:55,120 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
10:20:55,120 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
10:20:55,121 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,121 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
10:20:55,121 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
10:20:55,121 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
10:20:55,121 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
10:20:55,121 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
10:20:55,121 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
10:20:55,122 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
10:20:55,122 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
10:20:55,122 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
10:20:55,122 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
10:20:55,122 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
10:20:55,122 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
10:20:55,122 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
10:20:55,122 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
10:20:55,123 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
10:20:55,123 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
10:20:55,123 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
10:20:55,123 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
10:20:55,123 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
10:20:55,123 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
10:20:55,123 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
10:20:55,123 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
10:20:55,124 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
10:20:55,124 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,124 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
10:20:55,124 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
10:20:55,124 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
10:20:55,124 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
10:20:55,124 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
10:20:55,124 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
10:20:55,125 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
10:20:55,125 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
10:20:55,125 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
10:20:55,125 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
10:20:55,125 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
10:20:55,125 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
10:20:55,126 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,126 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
10:20:55,126 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
10:20:55,128 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
10:20:55,128 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
10:20:55,128 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
10:20:55,128 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
10:20:55,128 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
10:20:55,129 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
10:20:55,129 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
10:20:55,129 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
10:20:55,129 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
10:20:55,129 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
10:20:55,129 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
10:20:55,129 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
10:20:55,130 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
10:20:55,130 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
10:20:55,130 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
10:20:55,130 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
10:20:55,130 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
10:20:55,130 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
10:20:55,130 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,130 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
10:20:55,130 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
10:20:55,131 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
10:20:55,131 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
10:20:55,132 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
10:20:55,132 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
10:20:55,132 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
10:20:55,132 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
10:20:55,132 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
10:20:55,133 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
10:20:55,134 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
10:20:55,134 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
10:20:55,134 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
10:20:55,134 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,134 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
10:20:55,134 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
10:20:55,135 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
10:20:55,136 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
10:20:55,136 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
10:20:55,136 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
10:20:55,136 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
10:20:55,136 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
10:20:55,136 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
10:20:55,136 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
10:20:55,136 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
10:20:55,137 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
10:20:55,137 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
10:20:55,138 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
10:20:55,138 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
10:20:55,138 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
10:20:55,138 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
10:20:55,138 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
10:20:55,138 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,138 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
10:20:55,138 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
10:20:55,139 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
10:20:55,140 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
10:20:55,140 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
10:20:55,140 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
10:20:55,140 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
10:20:55,141 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
10:20:55,141 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
10:20:55,141 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
10:20:55,141 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
10:20:55,141 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
10:20:55,141 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
10:20:55,142 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
10:20:55,142 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
10:20:55,142 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
10:20:55,142 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
10:20:55,142 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
10:20:55,142 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
10:20:55,142 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
10:20:55,142 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
10:20:55,143 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
10:20:55,143 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
10:20:55,143 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
10:20:55,143 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
10:20:55,143 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
10:20:55,143 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
10:20:55,143 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
10:20:55,143 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
10:20:55,143 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
10:20:55,144 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
10:20:55,144 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
10:20:55,145 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

10:20:55,145 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
10:20:55,145 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
10:20:55,145 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
10:20:55,145 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
10:20:55,145 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
10:20:55,146 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
10:20:55,146 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
10:20:55,146 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
10:20:55,146 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
10:20:55,146 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
10:20:55,146 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
10:20:55,146 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
10:20:55,146 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
10:20:55,146 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
10:20:55,146 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
10:20:55,146 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
10:20:55,146 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
10:20:55,147 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
10:20:55,147 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
10:20:55,147 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
10:20:55,147 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
10:20:55,147 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
10:20:55,148 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
10:20:55,151 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s4.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:5432/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  4.0

10:20:55,151 (DBWorkload.java:260) INFO  - ======================================================================
10:20:55,156 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
10:20:55,156 (DBWorkload.java:305) DEBUG - Num groupings: 0
10:20:55,159 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
10:20:55,159 (DBWorkload.java:519) INFO  - ======================================================================
10:20:55,159 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
10:20:55,159 (DBWorkload.java:532) INFO  - ======================================================================
10:20:55,159 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
10:20:55,159 (DBWorkload.java:839) DEBUG - CommandLine load => true
10:20:55,159 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
10:20:55,159 (DBWorkload.java:798) DEBUG - Loading TPCC Database
10:20:55,210 (BenchmarkModule.java:320) DEBUG - Starting 5 TPCCLoader.LoaderThreads [maxConcurrent=8]
10:20:55,213 (ThreadUtil.java:294) DEBUG - Executing 5 threads and blocking until they finish
10:20:56,536 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
10:20:56,536 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 4
10:20:56,536 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 3
10:20:56,536 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 2
10:21:46,984 (TPCCLoader.java:696) DEBUG -   Writing final records 338374 of 0
10:21:48,325 (TPCCLoader.java:696) DEBUG -   Writing final records 339016 of 0
10:21:48,885 (TPCCLoader.java:696) DEBUG -   Writing final records 337999 of 0
10:21:49,711 (TPCCLoader.java:696) DEBUG -   Writing final records 340064 of 0
10:21:49,715 (ThreadUtil.java:314) DEBUG - Finished executing 5 threads [time=54.50s]
10:21:49,715 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
10:21:49,715 (DBWorkload.java:540) INFO  - Finished!
10:21:49,715 (DBWorkload.java:541) INFO  - ======================================================================
10:21:49,716 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
10:21:49,716 (DBWorkload.java:839) DEBUG - CommandLine execute => false
10:21:49,716 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
k = 1, start from log number 131
11:00:52,639 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
11:00:52,643 (Catalog.java:309) DEBUG - Original Table Names:
DISTRICT:   DISTRICT
OORDER:     OORDER
ITEM:       ITEM
WAREHOUSE:  WAREHOUSE
CUSTOMER:   CUSTOMER
ORDER_LINE: ORDER_LINE
NEW_ORDER:  NEW_ORDER
STOCK:      STOCK
HISTORY:    HISTORY

11:00:52,643 (BenchmarkModule.java:194) DEBUG - Found DDL file for HSQLDB: jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql
11:00:52,644 (BenchmarkModule.java:263) DEBUG - Executing script 'jar:file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/ddls/tpcc-ddl.sql'
11:00:52,644 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS WAREHOUSE;
11:00:52,645 (ScriptRunner.java:135) DEBUG - CREATE TABLE WAREHOUSE (
11:00:52,645 (ScriptRunner.java:135) DEBUG -   W_ID INT NOT NULL,
11:00:52,645 (ScriptRunner.java:135) DEBUG -   W_YTD DECIMAL(12,2) NOT NULL,
11:00:52,645 (ScriptRunner.java:135) DEBUG -   W_TAX DECIMAL(4,4) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   W_NAME VARCHAR(10) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   W_STREET_1 VARCHAR(20) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   W_STREET_2 VARCHAR(20) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   W_CITY VARCHAR(20) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   W_STATE CHAR(2) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   W_ZIP CHAR(9) NOT NULL,
11:00:52,646 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (W_ID)
11:00:52,646 (ScriptRunner.java:135) DEBUG - );
11:00:52,647 (ScriptRunner.java:135) DEBUG - 
11:00:52,648 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS DISTRICT;
11:00:52,648 (ScriptRunner.java:135) DEBUG - CREATE TABLE DISTRICT (
11:00:52,648 (ScriptRunner.java:135) DEBUG -   D_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
11:00:52,648 (ScriptRunner.java:135) DEBUG -   D_ID INT NOT NULL,
11:00:52,648 (ScriptRunner.java:135) DEBUG -   D_YTD DECIMAL(12,2) NOT NULL,
11:00:52,648 (ScriptRunner.java:135) DEBUG -   D_TAX DECIMAL(4,4) NOT NULL,
11:00:52,648 (ScriptRunner.java:135) DEBUG -   D_NEXT_O_ID INT NOT NULL,
11:00:52,648 (ScriptRunner.java:135) DEBUG -   D_NAME VARCHAR(10) NOT NULL,
11:00:52,649 (ScriptRunner.java:135) DEBUG -   D_STREET_1 VARCHAR(20) NOT NULL,
11:00:52,649 (ScriptRunner.java:135) DEBUG -   D_STREET_2 VARCHAR(20) NOT NULL,
11:00:52,649 (ScriptRunner.java:135) DEBUG -   D_CITY VARCHAR(20) NOT NULL,
11:00:52,649 (ScriptRunner.java:135) DEBUG -   D_STATE CHAR(2) NOT NULL,
11:00:52,649 (ScriptRunner.java:135) DEBUG -   D_ZIP CHAR(9) NOT NULL,
11:00:52,649 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (D_W_ID,D_ID)
11:00:52,649 (ScriptRunner.java:135) DEBUG - );
11:00:52,650 (ScriptRunner.java:135) DEBUG - 
11:00:52,650 (ScriptRunner.java:135) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
11:00:52,650 (ScriptRunner.java:141) DEBUG - -- TODO: C_SINCE ON UPDATE CURRENT_TIMESTAMP,
11:00:52,650 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS CUSTOMER;
11:00:52,650 (ScriptRunner.java:135) DEBUG - CREATE TABLE CUSTOMER (
11:00:52,650 (ScriptRunner.java:135) DEBUG -   C_W_ID INT NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_D_ID INT NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_ID INT NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_DISCOUNT DECIMAL(4,4) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_CREDIT CHAR(2) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_LAST VARCHAR(16) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_FIRST VARCHAR(16) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_CREDIT_LIM DECIMAL(12,2) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_BALANCE DECIMAL(12,2) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_YTD_PAYMENT FLOAT NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_PAYMENT_CNT INT NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_DELIVERY_CNT INT NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_STREET_1 VARCHAR(20) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_STREET_2 VARCHAR(20) NOT NULL,
11:00:52,651 (ScriptRunner.java:135) DEBUG -   C_CITY VARCHAR(20) NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   C_STATE CHAR(2) NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   C_ZIP CHAR(9) NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   C_PHONE CHAR(16) NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   C_SINCE TIMESTAMP NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   C_MIDDLE CHAR(2) NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   C_DATA VARCHAR(500) NOT NULL,
11:00:52,652 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (C_W_ID, C_D_ID, C_ID),
11:00:52,652 (ScriptRunner.java:135) DEBUG -   CONSTRAINT C_FKEY_D FOREIGN KEY (C_W_ID, C_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
11:00:52,652 (ScriptRunner.java:135) DEBUG - );
11:00:52,654 (ScriptRunner.java:135) DEBUG - CREATE INDEX IDX_CUSTOMER_NAME ON CUSTOMER (C_W_ID,C_D_ID,C_LAST,C_FIRST);
11:00:52,654 (ScriptRunner.java:135) DEBUG - 
11:00:52,654 (ScriptRunner.java:135) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
11:00:52,654 (ScriptRunner.java:141) DEBUG - -- TODO: O_ENTRY_D  ON UPDATE CURRENT_TIMESTAMP
11:00:52,654 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS OORDER;
11:00:52,655 (ScriptRunner.java:135) DEBUG - CREATE TABLE OORDER (
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_W_ID INT NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_D_ID INT NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_ID INT NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_C_ID INT NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_CARRIER_ID INT DEFAULT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_OL_CNT DECIMAL(2,0) NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_ALL_LOCAL DECIMAL(1,0) NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   O_ENTRY_D TIMESTAMP NOT NULL,
11:00:52,655 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (O_W_ID,O_D_ID,O_ID),
11:00:52,655 (ScriptRunner.java:135) DEBUG -   UNIQUE (O_W_ID,O_D_ID,O_C_ID,O_ID),
11:00:52,655 (ScriptRunner.java:135) DEBUG -   CONSTRAINT O_FKEY_C FOREIGN KEY (O_W_ID, O_D_ID, O_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID)
11:00:52,655 (ScriptRunner.java:135) DEBUG - );
11:00:52,656 (ScriptRunner.java:135) DEBUG - 
11:00:52,656 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS NEW_ORDER;
11:00:52,656 (ScriptRunner.java:135) DEBUG - CREATE TABLE NEW_ORDER (
11:00:52,656 (ScriptRunner.java:135) DEBUG -   NO_W_ID INT NOT NULL,
11:00:52,657 (ScriptRunner.java:135) DEBUG -   NO_D_ID INT NOT NULL,
11:00:52,657 (ScriptRunner.java:135) DEBUG -   NO_O_ID INT NOT NULL,
11:00:52,657 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (NO_W_ID,NO_D_ID,NO_O_ID),
11:00:52,657 (ScriptRunner.java:135) DEBUG -   CONSTRAINT NO_FKEY_O FOREIGN KEY (NO_W_ID, NO_D_ID, NO_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID)
11:00:52,657 (ScriptRunner.java:135) DEBUG - );
11:00:52,657 (ScriptRunner.java:135) DEBUG - 
11:00:52,657 (ScriptRunner.java:135) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
11:00:52,657 (ScriptRunner.java:141) DEBUG - -- TODO: H_DATE ON UPDATE CURRENT_TIMESTAMP
11:00:52,657 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS HISTORY;
11:00:52,658 (ScriptRunner.java:135) DEBUG - CREATE TABLE HISTORY (
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_C_ID INT NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_C_D_ID INT NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_C_W_ID INT NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_D_ID INT NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_W_ID INT NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_DATE TIMESTAMP NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_AMOUNT DECIMAL(6,2) NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   H_DATA VARCHAR(24) NOT NULL,
11:00:52,658 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_C FOREIGN KEY (H_C_W_ID, H_C_D_ID, H_C_ID) REFERENCES CUSTOMER (C_W_ID, C_D_ID, C_ID),
11:00:52,658 (ScriptRunner.java:135) DEBUG -   CONSTRAINT H_FKEY_D FOREIGN KEY (H_W_ID, H_D_ID) REFERENCES DISTRICT (D_W_ID, D_ID)
11:00:52,658 (ScriptRunner.java:135) DEBUG - );
11:00:52,659 (ScriptRunner.java:135) DEBUG - 
11:00:52,659 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ITEM;
11:00:52,659 (ScriptRunner.java:135) DEBUG - CREATE TABLE ITEM (
11:00:52,660 (ScriptRunner.java:135) DEBUG -   I_ID INT NOT NULL,
11:00:52,660 (ScriptRunner.java:135) DEBUG -   I_NAME VARCHAR(24) NOT NULL,
11:00:52,660 (ScriptRunner.java:135) DEBUG -   I_PRICE DECIMAL(5,2) NOT NULL,
11:00:52,660 (ScriptRunner.java:135) DEBUG -   I_DATA VARCHAR(50) NOT NULL,
11:00:52,660 (ScriptRunner.java:135) DEBUG -   I_IM_ID INT NOT NULL,
11:00:52,660 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (I_ID)
11:00:52,660 (ScriptRunner.java:135) DEBUG - );
11:00:52,661 (ScriptRunner.java:135) DEBUG - 
11:00:52,661 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS STOCK;
11:00:52,661 (ScriptRunner.java:135) DEBUG - CREATE TABLE STOCK (
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_W_ID INT NOT NULL REFERENCES WAREHOUSE (W_ID),
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_I_ID INT NOT NULL REFERENCES ITEM (I_ID),
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_QUANTITY DECIMAL(4,0) NOT NULL,
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_YTD DECIMAL(8,2) NOT NULL,
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_ORDER_CNT INT NOT NULL,
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_REMOTE_CNT INT NOT NULL,
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_DATA VARCHAR(50) NOT NULL,
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_DIST_01 CHAR(24) NOT NULL,
11:00:52,661 (ScriptRunner.java:135) DEBUG -   S_DIST_02 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_03 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_04 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_05 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_06 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_07 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_08 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_09 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   S_DIST_10 CHAR(24) NOT NULL,
11:00:52,662 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (S_W_ID, S_I_ID)
11:00:52,662 (ScriptRunner.java:135) DEBUG - );
11:00:52,664 (ScriptRunner.java:135) DEBUG - 
11:00:52,664 (ScriptRunner.java:135) DEBUG - DROP TABLE IF EXISTS ORDER_LINE;
11:00:52,664 (ScriptRunner.java:135) DEBUG - CREATE TABLE ORDER_LINE (
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_W_ID INT NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_D_ID INT NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_O_ID INT NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_NUMBER INT NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_I_ID INT NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_DELIVERY_D TIMESTAMP,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_AMOUNT DECIMAL(6,2) NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_SUPPLY_W_ID INT NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_QUANTITY DECIMAL(2,0) NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   OL_DIST_INFO CHAR(24) NOT NULL,
11:00:52,664 (ScriptRunner.java:135) DEBUG -   PRIMARY KEY (OL_W_ID,OL_D_ID,OL_O_ID,OL_NUMBER),
11:00:52,664 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_O FOREIGN KEY (OL_W_ID, OL_D_ID, OL_O_ID) REFERENCES OORDER (O_W_ID, O_D_ID, O_ID),
11:00:52,665 (ScriptRunner.java:135) DEBUG -   CONSTRAINT OL_FKEY_S FOREIGN KEY (OL_SUPPLY_W_ID, OL_I_ID) REFERENCES STOCK (S_W_ID, S_I_ID)
11:00:52,665 (ScriptRunner.java:135) DEBUG - );
11:00:52,677 (Catalog.java:149) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,677 (Catalog.java:153) DEBUG - ORIG:CUSTOMER -> CATALOG:CUSTOMER
11:00:52,677 (Catalog.java:161) DEBUG - Retrieving COLUMN information for CUSTOMER
11:00:52,690 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_W_ID [INTEGER / 4]
11:00:52,690 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_D_ID [INTEGER / 4]
11:00:52,690 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ID [INTEGER / 4]
11:00:52,690 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DISCOUNT [DECIMAL / 3]
11:00:52,691 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT [CHARACTER / 1]
11:00:52,691 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_LAST [VARCHAR / 12]
11:00:52,691 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_FIRST [VARCHAR / 12]
11:00:52,691 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CREDIT_LIM [DECIMAL / 3]
11:00:52,691 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_BALANCE [DECIMAL / 3]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_YTD_PAYMENT [DOUBLE / 8]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PAYMENT_CNT [INTEGER / 4]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DELIVERY_CNT [INTEGER / 4]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_1 [VARCHAR / 12]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STREET_2 [VARCHAR / 12]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_CITY [VARCHAR / 12]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_STATE [CHARACTER / 1]
11:00:52,692 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_ZIP [CHARACTER / 1]
11:00:52,693 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_PHONE [CHARACTER / 1]
11:00:52,693 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_SINCE [TIMESTAMP / 93]
11:00:52,693 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_MIDDLE [CHARACTER / 1]
11:00:52,693 (Catalog.java:180) DEBUG - Adding CUSTOMER.C_DATA [VARCHAR / 12]
11:00:52,693 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for CUSTOMER
11:00:52,693 (Catalog.java:199) DEBUG - PKEY[01]: CUSTOMER.C_W_ID
11:00:52,694 (Catalog.java:199) DEBUG - PKEY[02]: CUSTOMER.C_D_ID
11:00:52,694 (Catalog.java:199) DEBUG - PKEY[03]: CUSTOMER.C_ID
11:00:52,694 (Catalog.java:208) DEBUG - Retrieving INDEX information for CUSTOMER
11:00:52,695 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,1,C_W_ID,A,null,0,null,null]
11:00:52,695 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,2,C_D_ID,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,false,PUBLIC,SYS_IDX_SYS_PK_10076_10077,3,3,C_ID,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,1,C_W_ID,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,SYS_IDX_10078,3,2,C_D_ID,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,1,C_W_ID,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,2,C_D_ID,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,3,C_LAST,A,null,0,null,null]
11:00:52,696 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,CUSTOMER,true,PUBLIC,IDX_CUSTOMER_NAME,3,4,C_FIRST,A,null,0,null,null]
11:00:52,696 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for CUSTOMER
11:00:52,697 (Catalog.java:242) DEBUG - CUSTOMER => ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,CUSTOMER,C_W_ID,1,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
11:00:52,697 (Catalog.java:242) DEBUG - CUSTOMER => ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,CUSTOMER,C_D_ID,2,3,3,C_FKEY_D,SYS_REF_C_FKEY_D_10079,0]
11:00:52,697 (Catalog.java:149) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,697 (Catalog.java:153) DEBUG - ORIG:DISTRICT -> CATALOG:DISTRICT
11:00:52,698 (Catalog.java:161) DEBUG - Retrieving COLUMN information for DISTRICT
11:00:52,698 (Catalog.java:180) DEBUG - Adding DISTRICT.D_W_ID [INTEGER / 4]
11:00:52,698 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ID [INTEGER / 4]
11:00:52,698 (Catalog.java:180) DEBUG - Adding DISTRICT.D_YTD [DECIMAL / 3]
11:00:52,698 (Catalog.java:180) DEBUG - Adding DISTRICT.D_TAX [DECIMAL / 3]
11:00:52,698 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NEXT_O_ID [INTEGER / 4]
11:00:52,698 (Catalog.java:180) DEBUG - Adding DISTRICT.D_NAME [VARCHAR / 12]
11:00:52,699 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_1 [VARCHAR / 12]
11:00:52,699 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STREET_2 [VARCHAR / 12]
11:00:52,699 (Catalog.java:180) DEBUG - Adding DISTRICT.D_CITY [VARCHAR / 12]
11:00:52,699 (Catalog.java:180) DEBUG - Adding DISTRICT.D_STATE [CHARACTER / 1]
11:00:52,699 (Catalog.java:180) DEBUG - Adding DISTRICT.D_ZIP [CHARACTER / 1]
11:00:52,699 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for DISTRICT
11:00:52,699 (Catalog.java:199) DEBUG - PKEY[01]: DISTRICT.D_W_ID
11:00:52,700 (Catalog.java:199) DEBUG - PKEY[02]: DISTRICT.D_ID
11:00:52,700 (Catalog.java:208) DEBUG - Retrieving INDEX information for DISTRICT
11:00:52,700 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,1,D_W_ID,A,null,0,null,null]
11:00:52,700 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,DISTRICT,false,PUBLIC,SYS_IDX_SYS_PK_10051_10052,3,2,D_ID,A,null,0,null,null]
11:00:52,700 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,DISTRICT,true,PUBLIC,SYS_IDX_10053,3,1,D_W_ID,A,null,0,null,null]
11:00:52,700 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for DISTRICT
11:00:52,701 (Catalog.java:242) DEBUG - DISTRICT => ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,DISTRICT,D_W_ID,1,3,3,SYS_FK_10040,SYS_REF_SYS_FK_10040_10054,0]
11:00:52,701 (Catalog.java:149) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,701 (Catalog.java:153) DEBUG - ORIG:HISTORY -> CATALOG:HISTORY
11:00:52,701 (Catalog.java:161) DEBUG - Retrieving COLUMN information for HISTORY
11:00:52,701 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_ID [INTEGER / 4]
11:00:52,701 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_D_ID [INTEGER / 4]
11:00:52,702 (Catalog.java:180) DEBUG - Adding HISTORY.H_C_W_ID [INTEGER / 4]
11:00:52,702 (Catalog.java:180) DEBUG - Adding HISTORY.H_D_ID [INTEGER / 4]
11:00:52,702 (Catalog.java:180) DEBUG - Adding HISTORY.H_W_ID [INTEGER / 4]
11:00:52,702 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATE [TIMESTAMP / 93]
11:00:52,702 (Catalog.java:180) DEBUG - Adding HISTORY.H_AMOUNT [DECIMAL / 3]
11:00:52,702 (Catalog.java:180) DEBUG - Adding HISTORY.H_DATA [VARCHAR / 12]
11:00:52,702 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for HISTORY
11:00:52,702 (Catalog.java:208) DEBUG - Retrieving INDEX information for HISTORY
11:00:52,703 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,1,H_C_W_ID,A,null,0,null,null]
11:00:52,703 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,2,H_C_D_ID,A,null,0,null,null]
11:00:52,703 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10109,3,3,H_C_ID,A,null,0,null,null]
11:00:52,703 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,1,H_W_ID,A,null,0,null,null]
11:00:52,703 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,HISTORY,true,PUBLIC,SYS_IDX_10111,3,2,H_D_ID,A,null,0,null,null]
11:00:52,703 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for HISTORY
11:00:52,703 (Catalog.java:242) DEBUG - HISTORY => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,HISTORY,H_C_W_ID,1,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
11:00:52,703 (Catalog.java:242) DEBUG - HISTORY => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,HISTORY,H_C_D_ID,2,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
11:00:52,704 (Catalog.java:242) DEBUG - HISTORY => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,HISTORY,H_C_ID,3,3,3,H_FKEY_C,SYS_REF_H_FKEY_C_10110,0]
11:00:52,704 (Catalog.java:242) DEBUG - HISTORY => ROW[04] -> [PUBLIC,PUBLIC,DISTRICT,D_W_ID,PUBLIC,PUBLIC,HISTORY,H_W_ID,1,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
11:00:52,704 (Catalog.java:242) DEBUG - HISTORY => ROW[05] -> [PUBLIC,PUBLIC,DISTRICT,D_ID,PUBLIC,PUBLIC,HISTORY,H_D_ID,2,3,3,H_FKEY_D,SYS_REF_H_FKEY_D_10112,0]
11:00:52,704 (Catalog.java:149) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ITEM,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,704 (Catalog.java:153) DEBUG - ORIG:ITEM -> CATALOG:ITEM
11:00:52,704 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ITEM
11:00:52,704 (Catalog.java:180) DEBUG - Adding ITEM.I_ID [INTEGER / 4]
11:00:52,704 (Catalog.java:180) DEBUG - Adding ITEM.I_NAME [VARCHAR / 12]
11:00:52,705 (Catalog.java:180) DEBUG - Adding ITEM.I_PRICE [DECIMAL / 3]
11:00:52,705 (Catalog.java:180) DEBUG - Adding ITEM.I_DATA [VARCHAR / 12]
11:00:52,705 (Catalog.java:180) DEBUG - Adding ITEM.I_IM_ID [INTEGER / 4]
11:00:52,705 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ITEM
11:00:52,705 (Catalog.java:199) DEBUG - PKEY[01]: ITEM.I_ID
11:00:52,705 (Catalog.java:208) DEBUG - Retrieving INDEX information for ITEM
11:00:52,705 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ITEM,false,PUBLIC,SYS_IDX_SYS_PK_10118_10119,3,1,I_ID,A,null,0,null,null]
11:00:52,705 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ITEM
11:00:52,706 (Catalog.java:149) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,706 (Catalog.java:153) DEBUG - ORIG:NEW_ORDER -> CATALOG:NEW_ORDER
11:00:52,706 (Catalog.java:161) DEBUG - Retrieving COLUMN information for NEW_ORDER
11:00:52,708 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_W_ID [INTEGER / 4]
11:00:52,708 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_D_ID [INTEGER / 4]
11:00:52,708 (Catalog.java:180) DEBUG - Adding NEW_ORDER.NO_O_ID [INTEGER / 4]
11:00:52,708 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for NEW_ORDER
11:00:52,709 (Catalog.java:199) DEBUG - PKEY[01]: NEW_ORDER.NO_W_ID
11:00:52,709 (Catalog.java:199) DEBUG - PKEY[02]: NEW_ORDER.NO_D_ID
11:00:52,709 (Catalog.java:199) DEBUG - PKEY[03]: NEW_ORDER.NO_O_ID
11:00:52,709 (Catalog.java:208) DEBUG - Retrieving INDEX information for NEW_ORDER
11:00:52,709 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,1,NO_W_ID,A,null,0,null,null]
11:00:52,709 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,2,NO_D_ID,A,null,0,null,null]
11:00:52,709 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,NEW_ORDER,false,PUBLIC,SYS_IDX_SYS_PK_10096_10097,3,3,NO_O_ID,A,null,0,null,null]
11:00:52,710 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,1,NO_W_ID,A,null,0,null,null]
11:00:52,710 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,2,NO_D_ID,A,null,0,null,null]
11:00:52,710 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,NEW_ORDER,true,PUBLIC,SYS_IDX_10098,3,3,NO_O_ID,A,null,0,null,null]
11:00:52,710 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for NEW_ORDER
11:00:52,710 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_W_ID,1,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
11:00:52,710 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_D_ID,2,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
11:00:52,710 (Catalog.java:242) DEBUG - NEW_ORDER => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,NEW_ORDER,NO_O_ID,3,3,3,NO_FKEY_O,SYS_REF_NO_FKEY_O_10099,0]
11:00:52,710 (Catalog.java:149) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,711 (Catalog.java:153) DEBUG - ORIG:OORDER -> CATALOG:OORDER
11:00:52,711 (Catalog.java:161) DEBUG - Retrieving COLUMN information for OORDER
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_W_ID [INTEGER / 4]
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_D_ID [INTEGER / 4]
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_ID [INTEGER / 4]
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_C_ID [INTEGER / 4]
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_CARRIER_ID [INTEGER / 4]
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_OL_CNT [DECIMAL / 3]
11:00:52,711 (Catalog.java:180) DEBUG - Adding OORDER.O_ALL_LOCAL [DECIMAL / 3]
11:00:52,712 (Catalog.java:180) DEBUG - Adding OORDER.O_ENTRY_D [TIMESTAMP / 93]
11:00:52,712 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for OORDER
11:00:52,712 (Catalog.java:199) DEBUG - PKEY[01]: OORDER.O_W_ID
11:00:52,712 (Catalog.java:199) DEBUG - PKEY[02]: OORDER.O_D_ID
11:00:52,712 (Catalog.java:199) DEBUG - PKEY[03]: OORDER.O_ID
11:00:52,712 (Catalog.java:208) DEBUG - Retrieving INDEX information for OORDER
11:00:52,712 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,1,O_W_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,2,O_D_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_PK_10087_10089,3,3,O_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,1,O_W_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,2,O_D_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,3,O_C_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,OORDER,false,PUBLIC,SYS_IDX_SYS_CT_10088_10090,3,4,O_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,1,O_W_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,2,O_D_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:212) DEBUG - ROW[10] -> [PUBLIC,PUBLIC,OORDER,true,PUBLIC,SYS_IDX_10091,3,3,O_C_ID,A,null,0,null,null]
11:00:52,713 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for OORDER
11:00:52,714 (Catalog.java:242) DEBUG - OORDER => ROW[01] -> [PUBLIC,PUBLIC,CUSTOMER,C_W_ID,PUBLIC,PUBLIC,OORDER,O_W_ID,1,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
11:00:52,714 (Catalog.java:242) DEBUG - OORDER => ROW[02] -> [PUBLIC,PUBLIC,CUSTOMER,C_D_ID,PUBLIC,PUBLIC,OORDER,O_D_ID,2,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
11:00:52,714 (Catalog.java:242) DEBUG - OORDER => ROW[03] -> [PUBLIC,PUBLIC,CUSTOMER,C_ID,PUBLIC,PUBLIC,OORDER,O_C_ID,3,3,3,O_FKEY_C,SYS_REF_O_FKEY_C_10092,0]
11:00:52,714 (Catalog.java:149) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,714 (Catalog.java:153) DEBUG - ORIG:ORDER_LINE -> CATALOG:ORDER_LINE
11:00:52,714 (Catalog.java:161) DEBUG - Retrieving COLUMN information for ORDER_LINE
11:00:52,715 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_W_ID [INTEGER / 4]
11:00:52,715 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_D_ID [INTEGER / 4]
11:00:52,715 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_O_ID [INTEGER / 4]
11:00:52,715 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_NUMBER [INTEGER / 4]
11:00:52,716 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_I_ID [INTEGER / 4]
11:00:52,716 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DELIVERY_D [TIMESTAMP / 93]
11:00:52,716 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_AMOUNT [DECIMAL / 3]
11:00:52,716 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_SUPPLY_W_ID [INTEGER / 4]
11:00:52,716 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_QUANTITY [DECIMAL / 3]
11:00:52,716 (Catalog.java:180) DEBUG - Adding ORDER_LINE.OL_DIST_INFO [CHARACTER / 1]
11:00:52,716 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for ORDER_LINE
11:00:52,716 (Catalog.java:199) DEBUG - PKEY[01]: ORDER_LINE.OL_W_ID
11:00:52,716 (Catalog.java:199) DEBUG - PKEY[02]: ORDER_LINE.OL_D_ID
11:00:52,717 (Catalog.java:199) DEBUG - PKEY[03]: ORDER_LINE.OL_O_ID
11:00:52,717 (Catalog.java:199) DEBUG - PKEY[04]: ORDER_LINE.OL_NUMBER
11:00:52,717 (Catalog.java:208) DEBUG - Retrieving INDEX information for ORDER_LINE
11:00:52,717 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,1,OL_W_ID,A,null,0,null,null]
11:00:52,717 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,2,OL_D_ID,A,null,0,null,null]
11:00:52,717 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,3,OL_O_ID,A,null,0,null,null]
11:00:52,717 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,ORDER_LINE,false,PUBLIC,SYS_IDX_SYS_PK_10154_10155,3,4,OL_NUMBER,A,null,0,null,null]
11:00:52,717 (Catalog.java:212) DEBUG - ROW[05] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,1,OL_W_ID,A,null,0,null,null]
11:00:52,717 (Catalog.java:212) DEBUG - ROW[06] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,2,OL_D_ID,A,null,0,null,null]
11:00:52,718 (Catalog.java:212) DEBUG - ROW[07] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10156,3,3,OL_O_ID,A,null,0,null,null]
11:00:52,718 (Catalog.java:212) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,1,OL_SUPPLY_W_ID,A,null,0,null,null]
11:00:52,718 (Catalog.java:212) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,ORDER_LINE,true,PUBLIC,SYS_IDX_10158,3,2,OL_I_ID,A,null,0,null,null]
11:00:52,718 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for ORDER_LINE
11:00:52,718 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[01] -> [PUBLIC,PUBLIC,OORDER,O_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_W_ID,1,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
11:00:52,718 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[02] -> [PUBLIC,PUBLIC,OORDER,O_D_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_D_ID,2,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
11:00:52,718 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[03] -> [PUBLIC,PUBLIC,OORDER,O_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_O_ID,3,3,3,OL_FKEY_O,SYS_REF_OL_FKEY_O_10157,0]
11:00:52,718 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[04] -> [PUBLIC,PUBLIC,STOCK,S_W_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_SUPPLY_W_ID,1,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
11:00:52,719 (Catalog.java:242) DEBUG - ORDER_LINE => ROW[05] -> [PUBLIC,PUBLIC,STOCK,S_I_ID,PUBLIC,PUBLIC,ORDER_LINE,OL_I_ID,2,3,3,OL_FKEY_S,SYS_REF_OL_FKEY_S_10159,0]
11:00:52,719 (Catalog.java:149) DEBUG - ROW[08] -> [PUBLIC,PUBLIC,STOCK,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,719 (Catalog.java:153) DEBUG - ORIG:STOCK -> CATALOG:STOCK
11:00:52,719 (Catalog.java:161) DEBUG - Retrieving COLUMN information for STOCK
11:00:52,719 (Catalog.java:180) DEBUG - Adding STOCK.S_W_ID [INTEGER / 4]
11:00:52,719 (Catalog.java:180) DEBUG - Adding STOCK.S_I_ID [INTEGER / 4]
11:00:52,719 (Catalog.java:180) DEBUG - Adding STOCK.S_QUANTITY [DECIMAL / 3]
11:00:52,719 (Catalog.java:180) DEBUG - Adding STOCK.S_YTD [DECIMAL / 3]
11:00:52,719 (Catalog.java:180) DEBUG - Adding STOCK.S_ORDER_CNT [INTEGER / 4]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_REMOTE_CNT [INTEGER / 4]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DATA [VARCHAR / 12]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_01 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_02 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_03 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_04 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_05 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_06 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_07 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_08 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_09 [CHARACTER / 1]
11:00:52,720 (Catalog.java:180) DEBUG - Adding STOCK.S_DIST_10 [CHARACTER / 1]
11:00:52,720 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for STOCK
11:00:52,721 (Catalog.java:199) DEBUG - PKEY[01]: STOCK.S_W_ID
11:00:52,721 (Catalog.java:199) DEBUG - PKEY[02]: STOCK.S_I_ID
11:00:52,721 (Catalog.java:208) DEBUG - Retrieving INDEX information for STOCK
11:00:52,721 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,1,S_W_ID,A,null,0,null,null]
11:00:52,721 (Catalog.java:212) DEBUG - ROW[02] -> [PUBLIC,PUBLIC,STOCK,false,PUBLIC,SYS_IDX_SYS_PK_10139_10140,3,2,S_I_ID,A,null,0,null,null]
11:00:52,721 (Catalog.java:212) DEBUG - ROW[03] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10141,3,1,S_W_ID,A,null,0,null,null]
11:00:52,722 (Catalog.java:212) DEBUG - ROW[04] -> [PUBLIC,PUBLIC,STOCK,true,PUBLIC,SYS_IDX_10143,3,1,S_I_ID,A,null,0,null,null]
11:00:52,722 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for STOCK
11:00:52,722 (Catalog.java:242) DEBUG - STOCK => ROW[01] -> [PUBLIC,PUBLIC,ITEM,I_ID,PUBLIC,PUBLIC,STOCK,S_I_ID,1,3,3,SYS_FK_10123,SYS_REF_SYS_FK_10123_10144,0]
11:00:52,722 (Catalog.java:242) DEBUG - STOCK => ROW[02] -> [PUBLIC,PUBLIC,WAREHOUSE,W_ID,PUBLIC,PUBLIC,STOCK,S_W_ID,1,3,3,SYS_FK_10121,SYS_REF_SYS_FK_10121_10142,0]
11:00:52,722 (Catalog.java:149) DEBUG - ROW[09] -> [PUBLIC,PUBLIC,WAREHOUSE,TABLE,null,null,null,null,null,null,MEMORY,false,null]
11:00:52,722 (Catalog.java:153) DEBUG - ORIG:WAREHOUSE -> CATALOG:WAREHOUSE
11:00:52,722 (Catalog.java:161) DEBUG - Retrieving COLUMN information for WAREHOUSE
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ID [INTEGER / 4]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_YTD [DECIMAL / 3]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_TAX [DECIMAL / 3]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_NAME [VARCHAR / 12]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_1 [VARCHAR / 12]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STREET_2 [VARCHAR / 12]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_CITY [VARCHAR / 12]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_STATE [CHARACTER / 1]
11:00:52,723 (Catalog.java:180) DEBUG - Adding WAREHOUSE.W_ZIP [CHARACTER / 1]
11:00:52,723 (Catalog.java:188) DEBUG - Retrieving PRIMARY KEY information for WAREHOUSE
11:00:52,724 (Catalog.java:199) DEBUG - PKEY[01]: WAREHOUSE.W_ID
11:00:52,724 (Catalog.java:208) DEBUG - Retrieving INDEX information for WAREHOUSE
11:00:52,724 (Catalog.java:212) DEBUG - ROW[01] -> [PUBLIC,PUBLIC,WAREHOUSE,false,PUBLIC,SYS_IDX_SYS_PK_10037_10038,3,1,W_ID,A,null,0,null,null]
11:00:52,724 (Catalog.java:237) DEBUG - Retrieving FOREIGN KEY information for WAREHOUSE
11:00:52,725 (Catalog.java:259) DEBUG - Foreign Key Mappings:
DISTRICT:   D_W_ID: <WAREHOUSE, W_ID>
ITEM:       
OORDER:     O_W_ID: <CUSTOMER, C_W_ID>
            O_C_ID: <CUSTOMER, C_ID>
            O_D_ID: <CUSTOMER, C_D_ID>
WAREHOUSE:  
CUSTOMER:   C_W_ID: <DISTRICT, D_W_ID>
            C_D_ID: <DISTRICT, D_ID>
ORDER_LINE: OL_O_ID:        <OORDER, O_ID>
            OL_W_ID:        <OORDER, O_W_ID>
            OL_SUPPLY_W_ID: <STOCK, S_W_ID>
            OL_I_ID:        <STOCK, S_I_ID>
            OL_D_ID:        <OORDER, O_D_ID>
NEW_ORDER:  NO_W_ID: <OORDER, O_W_ID>
            NO_D_ID: <OORDER, O_D_ID>
            NO_O_ID: <OORDER, O_ID>
STOCK:      S_I_ID: <ITEM, I_ID>
            S_W_ID: <WAREHOUSE, W_ID>
HISTORY:    H_C_ID:   <CUSTOMER, C_ID>
            H_W_ID:   <DISTRICT, D_W_ID>
            H_D_ID:   <DISTRICT, D_ID>
            H_C_W_ID: <CUSTOMER, C_W_ID>
            H_C_D_ID: <CUSTOMER, C_D_ID>

11:00:52,726 (Catalog.java:280) DEBUG - DISTRICT.D_W_ID -> WAREHOUSE.W_ID
11:00:52,726 (Catalog.java:280) DEBUG - OORDER.O_W_ID -> CUSTOMER.C_W_ID
11:00:52,726 (Catalog.java:280) DEBUG - OORDER.O_C_ID -> CUSTOMER.C_ID
11:00:52,726 (Catalog.java:280) DEBUG - OORDER.O_D_ID -> CUSTOMER.C_D_ID
11:00:52,726 (Catalog.java:280) DEBUG - CUSTOMER.C_W_ID -> DISTRICT.D_W_ID
11:00:52,726 (Catalog.java:280) DEBUG - CUSTOMER.C_D_ID -> DISTRICT.D_ID
11:00:52,726 (Catalog.java:280) DEBUG - ORDER_LINE.OL_O_ID -> OORDER.O_ID
11:00:52,726 (Catalog.java:280) DEBUG - ORDER_LINE.OL_W_ID -> OORDER.O_W_ID
11:00:52,726 (Catalog.java:280) DEBUG - ORDER_LINE.OL_SUPPLY_W_ID -> STOCK.S_W_ID
11:00:52,726 (Catalog.java:280) DEBUG - ORDER_LINE.OL_I_ID -> STOCK.S_I_ID
11:00:52,726 (Catalog.java:280) DEBUG - ORDER_LINE.OL_D_ID -> OORDER.O_D_ID
11:00:52,726 (Catalog.java:280) DEBUG - NEW_ORDER.NO_W_ID -> OORDER.O_W_ID
11:00:52,726 (Catalog.java:280) DEBUG - NEW_ORDER.NO_D_ID -> OORDER.O_D_ID
11:00:52,727 (Catalog.java:280) DEBUG - NEW_ORDER.NO_O_ID -> OORDER.O_ID
11:00:52,727 (Catalog.java:280) DEBUG - STOCK.S_I_ID -> ITEM.I_ID
11:00:52,727 (Catalog.java:280) DEBUG - STOCK.S_W_ID -> WAREHOUSE.W_ID
11:00:52,727 (Catalog.java:280) DEBUG - HISTORY.H_C_ID -> CUSTOMER.C_ID
11:00:52,727 (Catalog.java:280) DEBUG - HISTORY.H_W_ID -> DISTRICT.D_W_ID
11:00:52,727 (Catalog.java:280) DEBUG - HISTORY.H_D_ID -> DISTRICT.D_ID
11:00:52,727 (Catalog.java:280) DEBUG - HISTORY.H_C_W_ID -> CUSTOMER.C_W_ID
11:00:52,727 (Catalog.java:280) DEBUG - HISTORY.H_C_D_ID -> CUSTOMER.C_D_ID
11:00:52,727 (BenchmarkModule.java:229) WARN  - Failed to find SQL Dialect XML file 'postgres-dialects.xml'
11:00:52,728 (StatementDialects.java:100) WARN  - SKIP - The SQL dialect file 'file:/home/xuyang/Codes/ope/stealthdb/benchmark/bin/oltp.jar!/com/oltpbenchmark/benchmarks/tpcc/dialects/tpcc-dialects.xml' does not exist
11:00:52,731 (DBWorkload.java:259) INFO  - ======================================================================

Benchmark:     TPCC {com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark}
Configuration: config/tpcc_config_s1.xml
Type:          POSTGRES
Driver:        org.postgresql.Driver
URL:           jdbc:postgresql://localhost:5432/test
Isolation:     TRANSACTION_READ_COMMITTED
Scale Factor:  1.0

11:00:52,731 (DBWorkload.java:260) INFO  - ======================================================================
11:00:52,736 (DBWorkload.java:299) DEBUG - Using the following transaction types: [Invalid/00, NewOrder/01, Payment/02, OrderStatus/03, Delivery/04, StockLevel/05]
11:00:52,736 (DBWorkload.java:305) DEBUG - Num groupings: 0
11:00:52,739 (DBWorkload.java:518) DEBUG - Skipping creating benchmark database tables
11:00:52,739 (DBWorkload.java:519) INFO  - ======================================================================
11:00:52,739 (DBWorkload.java:531) DEBUG - Skipping creating benchmark database tables
11:00:52,739 (DBWorkload.java:532) INFO  - ======================================================================
11:00:52,739 (DBWorkload.java:837) DEBUG - CommandLine has option 'load'. Checking whether set to true
11:00:52,739 (DBWorkload.java:839) DEBUG - CommandLine load => true
11:00:52,739 (DBWorkload.java:538) INFO  - Loading data into TPCC database...
11:00:52,739 (DBWorkload.java:798) DEBUG - Loading TPCC Database
11:00:52,781 (BenchmarkModule.java:320) DEBUG - Starting 2 TPCCLoader.LoaderThreads [maxConcurrent=8]
11:00:52,783 (ThreadUtil.java:294) DEBUG - Executing 2 threads and blocking until they finish
11:00:54,115 (TPCCLoader.java:111) DEBUG - Starting to load WAREHOUSE 1
11:01:26,017 (TPCCLoader.java:696) DEBUG -   Writing final records 337998 of 0
11:01:26,090 (ThreadUtil.java:314) DEBUG - Finished executing 2 threads [time=33.31s]
11:01:26,090 (BenchmarkModule.java:343) DEBUG - Finished loading the TPCC database
11:01:26,090 (DBWorkload.java:540) INFO  - Finished!
11:01:26,090 (DBWorkload.java:541) INFO  - ======================================================================
11:01:26,090 (DBWorkload.java:837) DEBUG - CommandLine has option 'execute'. Checking whether set to true
11:01:26,090 (DBWorkload.java:839) DEBUG - CommandLine execute => false
11:01:26,090 (DBWorkload.java:581) INFO  - Skipping benchmark workload execution
